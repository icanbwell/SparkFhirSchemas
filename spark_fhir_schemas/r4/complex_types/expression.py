from typing import List
from typing import Union

from pyspark.sql.types import DataType
from pyspark.sql.types import StringType
from pyspark.sql.types import StructField
from pyspark.sql.types import StructType


# This file is auto-generated by generate_schema so do not edit manually
# noinspection PyPep8Naming
class ExpressionSchema:
    """
    A expression that is evaluated in a specified context and returns a value. The
    context of use of the expression must specify the context in which the
    expression is evaluated, and how the result of the expression is used.
    """
    # noinspection PyDefaultArgument
    @staticmethod
    def get_schema(
        max_recursion_depth: int = 4,
        recursion_depth: int = 0,
        recursion_list: List[str] = []
    ) -> Union[StructType, DataType]:
        """
        A expression that is evaluated in a specified context and returns a value. The
        context of use of the expression must specify the context in which the
        expression is evaluated, and how the result of the expression is used.


        id: Unique id for the element within a resource (for internal references). This
            may be any string value that does not contain spaces.

        extension: May be used to represent additional information that is not part of the basic
            definition of the element. To make the use of extensions safe and manageable,
            there is a strict set of governance  applied to the definition and use of
            extensions. Though any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the extension.

        description: A brief, natural language description of the condition that effectively
            communicates the intended semantics.

        name: A short name assigned to the expression to allow for multiple reuse of the
            expression in the context where it is defined.

        language: The media type of the language for the expression.

        expression: An expression in the specified language that returns a value.

        reference: A URI that defines where the expression is found.

        """
        from spark_fhir_schemas.r4.simple_types.id import idSchema
        from spark_fhir_schemas.r4.simple_types.uri import uriSchema
        if recursion_list.count(
            "Expression"
        ) >= 2 or recursion_depth >= max_recursion_depth:
            return StructType([StructField("id", StringType(), True)])
        # add my name to recursion list for later
        my_recursion_list: List[str] = recursion_list + ["Expression"]
        schema = StructType(
            [
                # Unique id for the element within a resource (for internal references). This
                # may be any string value that does not contain spaces.
                StructField("id", StringType(), True),
                # May be used to represent additional information that is not part of the basic
                # definition of the element. To make the use of extensions safe and manageable,
                # there is a strict set of governance  applied to the definition and use of
                # extensions. Though any implementer can define an extension, there is a set of
                # requirements that SHALL be met as part of the definition of the extension.

                # >>> Hiding extension Extension

                # A brief, natural language description of the condition that effectively
                # communicates the intended semantics.
                StructField("description", StringType(), True),
                # A short name assigned to the expression to allow for multiple reuse of the
                # expression in the context where it is defined.
                StructField(
                    "name",
                    idSchema.get_schema(
                        max_recursion_depth=max_recursion_depth,
                        recursion_depth=recursion_depth + 1,
                        recursion_list=my_recursion_list
                    ), True
                ),
                # The media type of the language for the expression.
                StructField("language", StringType(), True),
                # An expression in the specified language that returns a value.
                StructField("expression", StringType(), True),
                # A URI that defines where the expression is found.
                StructField(
                    "reference",
                    uriSchema.get_schema(
                        max_recursion_depth=max_recursion_depth,
                        recursion_depth=recursion_depth + 1,
                        recursion_list=my_recursion_list
                    ), True
                ),
            ]
        )
        return schema
