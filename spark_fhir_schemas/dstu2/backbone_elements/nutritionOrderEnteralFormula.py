from typing import Union, List, Optional

from pyspark.sql.types import StructType, StructField, StringType, DataType


# This file is auto-generated by generate_schema so do not edit manually
# noinspection PyPep8Naming
class NutritionOrderEnteralFormulaSchema:
    """
    A request to supply a diet, formula feeding (enteral) or oral nutritional
    supplement to a patient/resident.
    """

    # noinspection PyDefaultArgument
    @staticmethod
    def get_schema(
        max_nesting_depth: Optional[int] = 6,
        nesting_depth: int = 0,
        nesting_list: List[str] = [],
        max_recursion_limit: Optional[int] = 2,
        include_extension: Optional[bool] = False,
        extension_fields: Optional[List[str]] = [
            "valueBoolean",
            "valueCode",
            "valueDate",
            "valueDateTime",
            "valueDecimal",
            "valueId",
            "valueInteger",
            "valuePositiveInt",
            "valueString",
            "valueTime",
            "valueUnsignedInt",
            "valueUri",
            "valueQuantity",
        ],
        extension_depth: int = 0,
        max_extension_depth: Optional[int] = 2,
    ) -> Union[StructType, DataType]:
        """
        A request to supply a diet, formula feeding (enteral) or oral nutritional
        supplement to a patient/resident.


            id: None
            extension: May be used to represent additional information that is not part of the basic
        definition of the element. In order to make the use of extensions safe and
        manageable, there is a strict set of governance  applied to the definition and
        use of extensions. Though any implementer is allowed to define an extension,
        there is a set of requirements that SHALL be met as part of the definition of
        the extension.
            modifierExtension: May be used to represent additional information that is not part of the basic
        definition of the element, and that modifies the understanding of the element
        that contains it. Usually modifier elements provide negation or qualification.
        In order to make the use of extensions safe and manageable, there is a strict
        set of governance applied to the definition and use of extensions. Though any
        implementer is allowed to define an extension, there is a set of requirements
        that SHALL be met as part of the definition of the extension. Applications
        processing a resource are required to check for modifier extensions.
            baseFormulaType: The type of enteral or infant formula such as an adult standard formula with
        fiber or a soy-based infant formula.
            baseFormulaProductName: The product or brand name of the enteral or infant formula product such as
        "ACME Adult Standard Formula".
            additiveType: Indicates the type of modular component such as protein, carbohydrate, fat or
        fiber to be provided in addition to or mixed with the base formula.
            additiveProductName: The product or brand name of the type of modular component to be added to the
        formula.
            caloricDensity: The amount of energy (Calories) that the formula should provide per specified
        volume, typically per mL or fluid oz.  For example, an infant may require a
        formula that provides 24 Calories per fluid ounce or an adult may require an
        enteral formula that provides 1.5 Calorie/mL.
            routeofAdministration: The route or physiological path of administration into the patient's
        gastrointestinal  tract for purposes of providing the formula feeding, e.g.
        nasogastric tube.
            administration: Formula administration instructions as structured data.  This repeating
        structure allows for changing the administration rate or volume over time for
        both bolus and continuous feeding.  An example of this would be an instruction
        to increase the rate of continuous feeding every 2 hours.
            maxVolumeToDeliver: The maximum total quantity of formula that may be administered to a subject
        over the period of time, e.g. 1440 mL over 24 hours.
            administrationInstruction: Free text formula administration, feeding instructions or additional
        instructions or information.
        """
        if (
            max_recursion_limit
            and nesting_list.count("NutritionOrderEnteralFormula")
            >= max_recursion_limit
        ) or (max_nesting_depth and nesting_depth >= max_nesting_depth):
            return StructType([StructField("id", StringType(), True)])
        # Return at least one field in the struct or Spark throws an error
        # "Datasource does not support writing empty or nested empty schemas"
        return StructType([StructField("id", StringType(), True)])
