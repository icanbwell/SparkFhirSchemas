from typing import Union, List, Optional

from pyspark.sql.types import StructType, StructField, StringType, DataType


# This file is auto-generated by generate_schema so do not edit manually
# noinspection PyPep8Naming
class ReferralRequestSchema:
    """
    Used to record and send details about a request for referral service or
    transfer of a patient to the care of another provider or provider
    organization.
    If the element is present, it must have either a @value, an @id, or extensions
    """

    # noinspection PyDefaultArgument
    @staticmethod
    def get_schema(
        max_nesting_depth: Optional[int] = 6,
        nesting_depth: int = 0,
        nesting_list: List[str] = [],
        max_recursion_limit: Optional[int] = 2,
        include_extension: Optional[bool] = False,
        extension_fields: Optional[List[str]] = [
            "valueBoolean",
            "valueCode",
            "valueDate",
            "valueDateTime",
            "valueDecimal",
            "valueId",
            "valueInteger",
            "valuePositiveInt",
            "valueString",
            "valueTime",
            "valueUnsignedInt",
            "valueUri",
            "valueQuantity",
        ],
        extension_depth: int = 0,
        max_extension_depth: Optional[int] = 2,
    ) -> Union[StructType, DataType]:
        """
        Used to record and send details about a request for referral service or
        transfer of a patient to the care of another provider or provider
        organization.
        If the element is present, it must have either a @value, an @id, or extensions


            id: The logical id of the resource, as used in the URL for the resource. Once
        assigned, this value never changes.
            meta: The metadata about the resource. This is content that is maintained by the
        infrastructure. Changes to the content may not always be associated with
        version changes to the resource.
            implicitRules: A reference to a set of rules that were followed when the resource was
        constructed, and which must be understood when processing the content.
            language: The base language in which the resource is written.
            text: A human-readable narrative that contains a summary of the resource, and may be
        used to represent the content of the resource to a human. The narrative need
        not encode all the structured data, but is required to contain sufficient
        detail to make it "clinically safe" for a human to just read the narrative.
        Resource definitions may define what content should be represented in the
        narrative to ensure clinical safety.
            contained: These resources do not have an independent existence apart from the resource
        that contains them - they cannot be identified independently, and nor can they
        have their own independent transaction scope.
            extension: May be used to represent additional information that is not part of the basic
        definition of the resource. In order to make the use of extensions safe and
        manageable, there is a strict set of governance  applied to the definition and
        use of extensions. Though any implementer is allowed to define an extension,
        there is a set of requirements that SHALL be met as part of the definition of
        the extension.
            modifierExtension: May be used to represent additional information that is not part of the basic
        definition of the resource, and that modifies the understanding of the element
        that contains it. Usually modifier elements provide negation or qualification.
        In order to make the use of extensions safe and manageable, there is a strict
        set of governance applied to the definition and use of extensions. Though any
        implementer is allowed to define an extension, there is a set of requirements
        that SHALL be met as part of the definition of the extension. Applications
        processing a resource are required to check for modifier extensions.
            status: The workflow status of the referral or transfer of care request.
            identifier: Business identifier that uniquely identifies the referral/care transfer
        request instance.
            date: Date/DateTime of creation for draft requests and date of activation for active
        requests.
            type: An indication of the type of referral (or where applicable the type of
        transfer of care) request.
            specialty: Indication of the clinical domain or discipline to which the referral or
        transfer of care request is sent.  For example: Cardiology Gastroenterology
        Diabetology.
            priority: An indication of the urgency of referral (or where applicable the type of
        transfer of care) request.
            patient: The patient who is the subject of a referral or transfer of care request.
            requester: The healthcare provider or provider organization who/which initiated the
        referral/transfer of care request. Can also be  Patient (a self referral).
            recipient: The healthcare provider(s) or provider organization(s) who/which is to receive
        the referral/transfer of care request.
            encounter: The encounter at which the request for referral or transfer of care is
        initiated.
            dateSent: Date/DateTime the request for referral or transfer of care is sent by the
        author.
            reason: Description of clinical condition indicating why referral/transfer of care is
        requested.  For example:  Pathological Anomalies, Disabled (physical or
        mental),  Behavioral Management.
            description: The reason element gives a short description of why the referral is being
        made, the description expands on this to support a more complete clinical
        summary.
            serviceRequested: The service(s) that is/are requested to be provided to the patient.  For
        example: cardiac pacemaker insertion.
            supportingInformation: Any additional (administrative, financial or clinical) information required to
        support request for referral or transfer of care.  For example: Presenting
        problems/chief complaints Medical History Family History Alerts
        Allergy/Intolerance and Adverse Reactions Medications Observations/Assessments
        (may include cognitive and fundtional assessments) Diagnostic Reports Care
        Plan.
            fulfillmentTime: The period of time within which the services identified in the
        referral/transfer of care is specified or required to occur.
        """
        if (
            max_recursion_limit
            and nesting_list.count("ReferralRequest") >= max_recursion_limit
        ) or (max_nesting_depth and nesting_depth >= max_nesting_depth):
            return StructType([StructField("id", StringType(), True)])
        # Return at least one field in the struct or Spark throws an error
        # "Datasource does not support writing empty or nested empty schemas"
        return StructType([StructField("id", StringType(), True)])
