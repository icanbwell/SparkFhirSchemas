from typing import Union, List, Optional

from pyspark.sql.types import StructType, StructField, StringType, DataType


# This file is auto-generated by generate_schema so do not edit manually
# noinspection PyPep8Naming
class EncounterSchema:
    """
    An interaction between a patient and healthcare provider(s) for the purpose of
    providing healthcare service(s) or assessing the health status of a patient.
    If the element is present, it must have either a @value, an @id, or extensions
    """

    # noinspection PyDefaultArgument
    @staticmethod
    def get_schema(
        max_nesting_depth: Optional[int] = 6,
        nesting_depth: int = 0,
        nesting_list: List[str] = [],
        max_recursion_limit: Optional[int] = 2,
        include_extension: Optional[bool] = False,
        extension_fields: Optional[List[str]] = [
            "valueBoolean",
            "valueCode",
            "valueDate",
            "valueDateTime",
            "valueDecimal",
            "valueId",
            "valueInteger",
            "valuePositiveInt",
            "valueString",
            "valueTime",
            "valueUnsignedInt",
            "valueUri",
            "valueQuantity",
        ],
        extension_depth: int = 0,
        max_extension_depth: Optional[int] = 2,
    ) -> Union[StructType, DataType]:
        """
        An interaction between a patient and healthcare provider(s) for the purpose of
        providing healthcare service(s) or assessing the health status of a patient.
        If the element is present, it must have either a @value, an @id, or extensions


            id: The logical id of the resource, as used in the URL for the resource. Once
        assigned, this value never changes.
            meta: The metadata about the resource. This is content that is maintained by the
        infrastructure. Changes to the content may not always be associated with
        version changes to the resource.
            implicitRules: A reference to a set of rules that were followed when the resource was
        constructed, and which must be understood when processing the content.
            language: The base language in which the resource is written.
            text: A human-readable narrative that contains a summary of the resource, and may be
        used to represent the content of the resource to a human. The narrative need
        not encode all the structured data, but is required to contain sufficient
        detail to make it "clinically safe" for a human to just read the narrative.
        Resource definitions may define what content should be represented in the
        narrative to ensure clinical safety.
            contained: These resources do not have an independent existence apart from the resource
        that contains them - they cannot be identified independently, and nor can they
        have their own independent transaction scope.
            extension: May be used to represent additional information that is not part of the basic
        definition of the resource. In order to make the use of extensions safe and
        manageable, there is a strict set of governance  applied to the definition and
        use of extensions. Though any implementer is allowed to define an extension,
        there is a set of requirements that SHALL be met as part of the definition of
        the extension.
            modifierExtension: May be used to represent additional information that is not part of the basic
        definition of the resource, and that modifies the understanding of the element
        that contains it. Usually modifier elements provide negation or qualification.
        In order to make the use of extensions safe and manageable, there is a strict
        set of governance applied to the definition and use of extensions. Though any
        implementer is allowed to define an extension, there is a set of requirements
        that SHALL be met as part of the definition of the extension. Applications
        processing a resource are required to check for modifier extensions.
            identifier: Identifier(s) by which this encounter is known.
            status: planned | arrived | in-progress | onleave | finished | cancelled.
            statusHistory: The status history permits the encounter resource to contain the status
        history without needing to read through the historical versions of the
        resource, or even have the server store them.
            class: inpatient | outpatient | ambulatory | emergency +.
            type: Specific type of encounter (e.g. e-mail consultation, surgical day-care,
        skilled nursing, rehabilitation).
            priority: Indicates the urgency of the encounter.
            patient: The patient present at the encounter.
            episodeOfCare: Where a specific encounter should be classified as a part of a specific
        episode(s) of care this field should be used. This association can facilitate
        grouping of related encounters together for a specific purpose, such as
        government reporting, issue tracking, association via a common problem.  The
        association is recorded on the encounter as these are typically created after
        the episode of care, and grouped on entry rather than editing the episode of
        care to append another encounter to it (the episode of care could span years).
            incomingReferral: The referral request this encounter satisfies (incoming referral).
            participant: The list of people responsible for providing the service.
            appointment: The appointment that scheduled this encounter.
            period: The start and end time of the encounter.
            length: Quantity of time the encounter lasted. This excludes the time during leaves of
        absence.
            reason: Reason the encounter takes place, expressed as a code. For admissions, this
        can be used for a coded admission diagnosis.
            indication: Reason the encounter takes place, as specified using information from another
        resource. For admissions, this is the admission diagnosis. The indication will
        typically be a Condition (with other resources referenced in the
        evidence.detail), or a Procedure.
            hospitalization: Details about the admission to a healthcare service.
            location: List of locations where  the patient has been during this encounter.
            serviceProvider: An organization that is in charge of maintaining the information of this
        Encounter (e.g. who maintains the report or the master service catalog item,
        etc.). This MAY be the same as the organization on the Patient record, however
        it could be different. This MAY not be not the Service Delivery Location's
        Organization.
            partOf: Another Encounter of which this encounter is a part of (administratively or in
        time).
        """
        if (
            max_recursion_limit
            and nesting_list.count("Encounter") >= max_recursion_limit
        ) or (max_nesting_depth and nesting_depth >= max_nesting_depth):
            return StructType([StructField("id", StringType(), True)])
        # Return at least one field in the struct or Spark throws an error
        # "Datasource does not support writing empty or nested empty schemas"
        return StructType([StructField("id", StringType(), True)])
