/* eslint-disable no-unused-vars */
// This file is auto-generated by generate_classes so do not edit manually

const Element = require('../complex_types/element');


/**
ElementDefinition
    Captures constraints on each element within the resource, profile, or
    extension.
    If the element is present, it must have a value for at least one of the
    defined elements, an @id referenced from the Narrative, or extensions
*/
class ElementDefinition extends Element {
    /**
     * @param {id|undefined} [id],
     * @param {Extension[]|undefined} [extension],
     * @param {String} path,
     * @param {code[]|undefined} [representation],
     * @param {String|undefined} [name],
     * @param {String|undefined} [label],
     * @param {Coding[]|undefined} [code],
     * @param {ElementDefinitionSlicing|undefined} [slicing],
     * @param {String|undefined} [short],
     * @param {markdown|undefined} [definition],
     * @param {markdown|undefined} [comments],
     * @param {markdown|undefined} [requirements],
     * @param {String[]|undefined} [alias],
     * @param {Int|undefined} [min],
     * @param {String|undefined} [max],
     * @param {ElementDefinitionBase|undefined} [base],
     * @param {ElementDefinitionType[]|undefined} [type],
     * @param {String|undefined} [nameReference],
     * @param {Boolean|undefined} [defaultValueBoolean],
     * @param {Int|undefined} [defaultValueInteger],
     * @param {decimal|undefined} [defaultValueDecimal],
     * @param {base64Binary|undefined} [defaultValueBase64Binary],
     * @param {instant|undefined} [defaultValueInstant],
     * @param {String|undefined} [defaultValueString],
     * @param {uri|undefined} [defaultValueUri],
     * @param {date|undefined} [defaultValueDate],
     * @param {dateTime|undefined} [defaultValueDateTime],
     * @param {time|undefined} [defaultValueTime],
     * @param {code|undefined} [defaultValueCode],
     * @param {oid|undefined} [defaultValueOid],
     * @param {uuid|undefined} [defaultValueUuid],
     * @param {id|undefined} [defaultValueId],
     * @param {unsignedInt|undefined} [defaultValueUnsignedInt],
     * @param {Int|undefined} [defaultValuePositiveInt],
     * @param {markdown|undefined} [defaultValueMarkdown],
     * @param {Annotation|undefined} [defaultValueAnnotation],
     * @param {Attachment|undefined} [defaultValueAttachment],
     * @param {Identifier|undefined} [defaultValueIdentifier],
     * @param {CodeableConcept|undefined} [defaultValueCodeableConcept],
     * @param {Coding|undefined} [defaultValueCoding],
     * @param {Quantity|undefined} [defaultValueQuantity],
     * @param {Range|undefined} [defaultValueRange],
     * @param {Period|undefined} [defaultValuePeriod],
     * @param {Ratio|undefined} [defaultValueRatio],
     * @param {Reference|undefined} [defaultValueReference],
     * @param {SampledData|undefined} [defaultValueSampledData],
     * @param {Signature|undefined} [defaultValueSignature],
     * @param {HumanName|undefined} [defaultValueHumanName],
     * @param {Address|undefined} [defaultValueAddress],
     * @param {ContactPoint|undefined} [defaultValueContactPoint],
     * @param {Timing|undefined} [defaultValueTiming],
     * @param {Meta|undefined} [defaultValueMeta],
     * @param {markdown|undefined} [meaningWhenMissing],
     * @param {Boolean|undefined} [fixedBoolean],
     * @param {Int|undefined} [fixedInteger],
     * @param {decimal|undefined} [fixedDecimal],
     * @param {base64Binary|undefined} [fixedBase64Binary],
     * @param {instant|undefined} [fixedInstant],
     * @param {String|undefined} [fixedString],
     * @param {uri|undefined} [fixedUri],
     * @param {date|undefined} [fixedDate],
     * @param {dateTime|undefined} [fixedDateTime],
     * @param {time|undefined} [fixedTime],
     * @param {code|undefined} [fixedCode],
     * @param {oid|undefined} [fixedOid],
     * @param {uuid|undefined} [fixedUuid],
     * @param {id|undefined} [fixedId],
     * @param {unsignedInt|undefined} [fixedUnsignedInt],
     * @param {Int|undefined} [fixedPositiveInt],
     * @param {markdown|undefined} [fixedMarkdown],
     * @param {Annotation|undefined} [fixedAnnotation],
     * @param {Attachment|undefined} [fixedAttachment],
     * @param {Identifier|undefined} [fixedIdentifier],
     * @param {CodeableConcept|undefined} [fixedCodeableConcept],
     * @param {Coding|undefined} [fixedCoding],
     * @param {Quantity|undefined} [fixedQuantity],
     * @param {Range|undefined} [fixedRange],
     * @param {Period|undefined} [fixedPeriod],
     * @param {Ratio|undefined} [fixedRatio],
     * @param {Reference|undefined} [fixedReference],
     * @param {SampledData|undefined} [fixedSampledData],
     * @param {Signature|undefined} [fixedSignature],
     * @param {HumanName|undefined} [fixedHumanName],
     * @param {Address|undefined} [fixedAddress],
     * @param {ContactPoint|undefined} [fixedContactPoint],
     * @param {Timing|undefined} [fixedTiming],
     * @param {Meta|undefined} [fixedMeta],
     * @param {Boolean|undefined} [patternBoolean],
     * @param {Int|undefined} [patternInteger],
     * @param {decimal|undefined} [patternDecimal],
     * @param {base64Binary|undefined} [patternBase64Binary],
     * @param {instant|undefined} [patternInstant],
     * @param {String|undefined} [patternString],
     * @param {uri|undefined} [patternUri],
     * @param {date|undefined} [patternDate],
     * @param {dateTime|undefined} [patternDateTime],
     * @param {time|undefined} [patternTime],
     * @param {code|undefined} [patternCode],
     * @param {oid|undefined} [patternOid],
     * @param {uuid|undefined} [patternUuid],
     * @param {id|undefined} [patternId],
     * @param {unsignedInt|undefined} [patternUnsignedInt],
     * @param {Int|undefined} [patternPositiveInt],
     * @param {markdown|undefined} [patternMarkdown],
     * @param {Annotation|undefined} [patternAnnotation],
     * @param {Attachment|undefined} [patternAttachment],
     * @param {Identifier|undefined} [patternIdentifier],
     * @param {CodeableConcept|undefined} [patternCodeableConcept],
     * @param {Coding|undefined} [patternCoding],
     * @param {Quantity|undefined} [patternQuantity],
     * @param {Range|undefined} [patternRange],
     * @param {Period|undefined} [patternPeriod],
     * @param {Ratio|undefined} [patternRatio],
     * @param {Reference|undefined} [patternReference],
     * @param {SampledData|undefined} [patternSampledData],
     * @param {Signature|undefined} [patternSignature],
     * @param {HumanName|undefined} [patternHumanName],
     * @param {Address|undefined} [patternAddress],
     * @param {ContactPoint|undefined} [patternContactPoint],
     * @param {Timing|undefined} [patternTiming],
     * @param {Meta|undefined} [patternMeta],
     * @param {Boolean|undefined} [exampleBoolean],
     * @param {Int|undefined} [exampleInteger],
     * @param {decimal|undefined} [exampleDecimal],
     * @param {base64Binary|undefined} [exampleBase64Binary],
     * @param {instant|undefined} [exampleInstant],
     * @param {String|undefined} [exampleString],
     * @param {uri|undefined} [exampleUri],
     * @param {date|undefined} [exampleDate],
     * @param {dateTime|undefined} [exampleDateTime],
     * @param {time|undefined} [exampleTime],
     * @param {code|undefined} [exampleCode],
     * @param {oid|undefined} [exampleOid],
     * @param {uuid|undefined} [exampleUuid],
     * @param {id|undefined} [exampleId],
     * @param {unsignedInt|undefined} [exampleUnsignedInt],
     * @param {Int|undefined} [examplePositiveInt],
     * @param {markdown|undefined} [exampleMarkdown],
     * @param {Annotation|undefined} [exampleAnnotation],
     * @param {Attachment|undefined} [exampleAttachment],
     * @param {Identifier|undefined} [exampleIdentifier],
     * @param {CodeableConcept|undefined} [exampleCodeableConcept],
     * @param {Coding|undefined} [exampleCoding],
     * @param {Quantity|undefined} [exampleQuantity],
     * @param {Range|undefined} [exampleRange],
     * @param {Period|undefined} [examplePeriod],
     * @param {Ratio|undefined} [exampleRatio],
     * @param {Reference|undefined} [exampleReference],
     * @param {SampledData|undefined} [exampleSampledData],
     * @param {Signature|undefined} [exampleSignature],
     * @param {HumanName|undefined} [exampleHumanName],
     * @param {Address|undefined} [exampleAddress],
     * @param {ContactPoint|undefined} [exampleContactPoint],
     * @param {Timing|undefined} [exampleTiming],
     * @param {Meta|undefined} [exampleMeta],
     * @param {Boolean|undefined} [minValueBoolean],
     * @param {Int|undefined} [minValueInteger],
     * @param {decimal|undefined} [minValueDecimal],
     * @param {base64Binary|undefined} [minValueBase64Binary],
     * @param {instant|undefined} [minValueInstant],
     * @param {String|undefined} [minValueString],
     * @param {uri|undefined} [minValueUri],
     * @param {date|undefined} [minValueDate],
     * @param {dateTime|undefined} [minValueDateTime],
     * @param {time|undefined} [minValueTime],
     * @param {code|undefined} [minValueCode],
     * @param {oid|undefined} [minValueOid],
     * @param {uuid|undefined} [minValueUuid],
     * @param {id|undefined} [minValueId],
     * @param {unsignedInt|undefined} [minValueUnsignedInt],
     * @param {Int|undefined} [minValuePositiveInt],
     * @param {markdown|undefined} [minValueMarkdown],
     * @param {Annotation|undefined} [minValueAnnotation],
     * @param {Attachment|undefined} [minValueAttachment],
     * @param {Identifier|undefined} [minValueIdentifier],
     * @param {CodeableConcept|undefined} [minValueCodeableConcept],
     * @param {Coding|undefined} [minValueCoding],
     * @param {Quantity|undefined} [minValueQuantity],
     * @param {Range|undefined} [minValueRange],
     * @param {Period|undefined} [minValuePeriod],
     * @param {Ratio|undefined} [minValueRatio],
     * @param {Reference|undefined} [minValueReference],
     * @param {SampledData|undefined} [minValueSampledData],
     * @param {Signature|undefined} [minValueSignature],
     * @param {HumanName|undefined} [minValueHumanName],
     * @param {Address|undefined} [minValueAddress],
     * @param {ContactPoint|undefined} [minValueContactPoint],
     * @param {Timing|undefined} [minValueTiming],
     * @param {Meta|undefined} [minValueMeta],
     * @param {Boolean|undefined} [maxValueBoolean],
     * @param {Int|undefined} [maxValueInteger],
     * @param {decimal|undefined} [maxValueDecimal],
     * @param {base64Binary|undefined} [maxValueBase64Binary],
     * @param {instant|undefined} [maxValueInstant],
     * @param {String|undefined} [maxValueString],
     * @param {uri|undefined} [maxValueUri],
     * @param {date|undefined} [maxValueDate],
     * @param {dateTime|undefined} [maxValueDateTime],
     * @param {time|undefined} [maxValueTime],
     * @param {code|undefined} [maxValueCode],
     * @param {oid|undefined} [maxValueOid],
     * @param {uuid|undefined} [maxValueUuid],
     * @param {id|undefined} [maxValueId],
     * @param {unsignedInt|undefined} [maxValueUnsignedInt],
     * @param {Int|undefined} [maxValuePositiveInt],
     * @param {markdown|undefined} [maxValueMarkdown],
     * @param {Annotation|undefined} [maxValueAnnotation],
     * @param {Attachment|undefined} [maxValueAttachment],
     * @param {Identifier|undefined} [maxValueIdentifier],
     * @param {CodeableConcept|undefined} [maxValueCodeableConcept],
     * @param {Coding|undefined} [maxValueCoding],
     * @param {Quantity|undefined} [maxValueQuantity],
     * @param {Range|undefined} [maxValueRange],
     * @param {Period|undefined} [maxValuePeriod],
     * @param {Ratio|undefined} [maxValueRatio],
     * @param {Reference|undefined} [maxValueReference],
     * @param {SampledData|undefined} [maxValueSampledData],
     * @param {Signature|undefined} [maxValueSignature],
     * @param {HumanName|undefined} [maxValueHumanName],
     * @param {Address|undefined} [maxValueAddress],
     * @param {ContactPoint|undefined} [maxValueContactPoint],
     * @param {Timing|undefined} [maxValueTiming],
     * @param {Meta|undefined} [maxValueMeta],
     * @param {Int|undefined} [maxLength],
     * @param {id[]|undefined} [condition],
     * @param {ElementDefinitionConstraint[]|undefined} [constraint],
     * @param {Boolean|undefined} [mustSupport],
     * @param {Boolean|undefined} [isModifier],
     * @param {Boolean|undefined} [isSummary],
     * @param {ElementDefinitionBinding|undefined} [binding],
     * @param {ElementDefinitionMapping[]|undefined} [mapping],
    */
    constructor(
        {
            id,
            extension,
            path,
            representation,
            name,
            label,
            code,
            slicing,
            short,
            definition,
            comments,
            requirements,
            alias,
            min,
            max,
            base,
            type,
            nameReference,
            defaultValueBoolean,
            defaultValueInteger,
            defaultValueDecimal,
            defaultValueBase64Binary,
            defaultValueInstant,
            defaultValueString,
            defaultValueUri,
            defaultValueDate,
            defaultValueDateTime,
            defaultValueTime,
            defaultValueCode,
            defaultValueOid,
            defaultValueUuid,
            defaultValueId,
            defaultValueUnsignedInt,
            defaultValuePositiveInt,
            defaultValueMarkdown,
            defaultValueAnnotation,
            defaultValueAttachment,
            defaultValueIdentifier,
            defaultValueCodeableConcept,
            defaultValueCoding,
            defaultValueQuantity,
            defaultValueRange,
            defaultValuePeriod,
            defaultValueRatio,
            defaultValueReference,
            defaultValueSampledData,
            defaultValueSignature,
            defaultValueHumanName,
            defaultValueAddress,
            defaultValueContactPoint,
            defaultValueTiming,
            defaultValueMeta,
            meaningWhenMissing,
            fixedBoolean,
            fixedInteger,
            fixedDecimal,
            fixedBase64Binary,
            fixedInstant,
            fixedString,
            fixedUri,
            fixedDate,
            fixedDateTime,
            fixedTime,
            fixedCode,
            fixedOid,
            fixedUuid,
            fixedId,
            fixedUnsignedInt,
            fixedPositiveInt,
            fixedMarkdown,
            fixedAnnotation,
            fixedAttachment,
            fixedIdentifier,
            fixedCodeableConcept,
            fixedCoding,
            fixedQuantity,
            fixedRange,
            fixedPeriod,
            fixedRatio,
            fixedReference,
            fixedSampledData,
            fixedSignature,
            fixedHumanName,
            fixedAddress,
            fixedContactPoint,
            fixedTiming,
            fixedMeta,
            patternBoolean,
            patternInteger,
            patternDecimal,
            patternBase64Binary,
            patternInstant,
            patternString,
            patternUri,
            patternDate,
            patternDateTime,
            patternTime,
            patternCode,
            patternOid,
            patternUuid,
            patternId,
            patternUnsignedInt,
            patternPositiveInt,
            patternMarkdown,
            patternAnnotation,
            patternAttachment,
            patternIdentifier,
            patternCodeableConcept,
            patternCoding,
            patternQuantity,
            patternRange,
            patternPeriod,
            patternRatio,
            patternReference,
            patternSampledData,
            patternSignature,
            patternHumanName,
            patternAddress,
            patternContactPoint,
            patternTiming,
            patternMeta,
            exampleBoolean,
            exampleInteger,
            exampleDecimal,
            exampleBase64Binary,
            exampleInstant,
            exampleString,
            exampleUri,
            exampleDate,
            exampleDateTime,
            exampleTime,
            exampleCode,
            exampleOid,
            exampleUuid,
            exampleId,
            exampleUnsignedInt,
            examplePositiveInt,
            exampleMarkdown,
            exampleAnnotation,
            exampleAttachment,
            exampleIdentifier,
            exampleCodeableConcept,
            exampleCoding,
            exampleQuantity,
            exampleRange,
            examplePeriod,
            exampleRatio,
            exampleReference,
            exampleSampledData,
            exampleSignature,
            exampleHumanName,
            exampleAddress,
            exampleContactPoint,
            exampleTiming,
            exampleMeta,
            minValueBoolean,
            minValueInteger,
            minValueDecimal,
            minValueBase64Binary,
            minValueInstant,
            minValueString,
            minValueUri,
            minValueDate,
            minValueDateTime,
            minValueTime,
            minValueCode,
            minValueOid,
            minValueUuid,
            minValueId,
            minValueUnsignedInt,
            minValuePositiveInt,
            minValueMarkdown,
            minValueAnnotation,
            minValueAttachment,
            minValueIdentifier,
            minValueCodeableConcept,
            minValueCoding,
            minValueQuantity,
            minValueRange,
            minValuePeriod,
            minValueRatio,
            minValueReference,
            minValueSampledData,
            minValueSignature,
            minValueHumanName,
            minValueAddress,
            minValueContactPoint,
            minValueTiming,
            minValueMeta,
            maxValueBoolean,
            maxValueInteger,
            maxValueDecimal,
            maxValueBase64Binary,
            maxValueInstant,
            maxValueString,
            maxValueUri,
            maxValueDate,
            maxValueDateTime,
            maxValueTime,
            maxValueCode,
            maxValueOid,
            maxValueUuid,
            maxValueId,
            maxValueUnsignedInt,
            maxValuePositiveInt,
            maxValueMarkdown,
            maxValueAnnotation,
            maxValueAttachment,
            maxValueIdentifier,
            maxValueCodeableConcept,
            maxValueCoding,
            maxValueQuantity,
            maxValueRange,
            maxValuePeriod,
            maxValueRatio,
            maxValueReference,
            maxValueSampledData,
            maxValueSignature,
            maxValueHumanName,
            maxValueAddress,
            maxValueContactPoint,
            maxValueTiming,
            maxValueMeta,
            maxLength,
            condition,
            constraint,
            mustSupport,
            isModifier,
            isSummary,
            binding,
            mapping,
        }
    ) {
        super({});

        // ---- Define getters and setters as enumerable ---

        /**
         * @description None
         * @property {id|undefined}
        */
        Object.defineProperty(this, 'id', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.id,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.id = valueProvided;
            }
        });

        /**
         * @description May be used to represent additional information that is not part of the basic
    definition of the element. In order to make the use of extensions safe and
    manageable, there is a strict set of governance  applied to the definition and
    use of extensions. Though any implementer is allowed to define an extension,
    there is a set of requirements that SHALL be met as part of the definition of
    the extension.
         * @property {Extension[]|undefined}
        */
        Object.defineProperty(this, 'extension', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.extension,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Extension = require('../extensions/extension.js');
                this.__data.extension = Array.isArray(valueProvided) ? valueProvided.map(v => new Extension(v)) : [new Extension(valueProvided)];
            }
        });

        /**
         * @description The path identifies the element and is expressed as a "."-separated list of
    ancestor elements, beginning with the name of the resource or extension.
         * @property {String}
        */
        Object.defineProperty(this, 'path', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.path,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.path = valueProvided;
            }
        });

        /**
         * @description Codes that define how this element is represented in instances, when the
    deviation varies from the normal case.
         * @property {code[]|undefined}
        */
        Object.defineProperty(this, 'representation', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.representation,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.representation = Array.isArray(valueProvided) ? valueProvided.map(v => v) : [valueProvided];
            }
        });

        /**
         * @description The name of this element definition (to refer to it from other element
    definitions using ElementDefinition.nameReference). This is a unique name
    referring to a specific set of constraints applied to this element. One use of
    this is to provide a name to different slices of the same element.
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'name', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.name,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.name = valueProvided;
            }
        });

        /**
         * @description The text to display beside the element indicating its meaning or to use to
    prompt for the element in a user display or form.
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'label', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.label,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.label = valueProvided;
            }
        });

        /**
         * @description A code that provides the meaning for the element according to a particular
    terminology.
         * @property {Coding[]|undefined}
        */
        Object.defineProperty(this, 'code', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.code,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Coding = require('../complex_types/coding.js');
                this.__data.code = Array.isArray(valueProvided) ? valueProvided.map(v => new Coding(v)) : [new Coding(valueProvided)];
            }
        });

        /**
         * @description Indicates that the element is sliced into a set of alternative definitions
    (i.e. in a structure definition, there are multiple different constraints on a
    single element in the base resource). Slicing can be used in any resource that
    has cardinality ..* on the base resource, or any resource with a choice of
    types. The set of slices is any elements that come after this in the element
    sequence that have the same path, until a shorter path occurs (the shorter
    path terminates the set).
         * @property {ElementDefinitionSlicing|undefined}
        */
        Object.defineProperty(this, 'slicing', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.slicing,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let ElementDefinitionSlicing = require('../complex_types/elementDefinitionSlicing.js');
                this.__data.slicing = new ElementDefinitionSlicing(valueProvided);
            }
        });

        /**
         * @description A concise description of what this element means (e.g. for use in
    autogenerated summaries).
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'short', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.short,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.short = valueProvided;
            }
        });

        /**
         * @description Provides a complete explanation of the meaning of the data element for human
    readability.  For the case of elements derived from existing elements (e.g.
    constraints), the definition SHALL be consistent with the base definition, but
    convey the meaning of the element in the particular context of use of the
    resource.
         * @property {markdown|undefined}
        */
        Object.defineProperty(this, 'definition', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.definition,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.definition = valueProvided;
            }
        });

        /**
         * @description Explanatory notes and implementation guidance about the data element,
    including notes about how to use the data properly, exceptions to proper use,
    etc.
         * @property {markdown|undefined}
        */
        Object.defineProperty(this, 'comments', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.comments,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.comments = valueProvided;
            }
        });

        /**
         * @description This element is for traceability of why the element was created and why the
    constraints exist as they do. This may be used to point to source materials or
    specifications that drove the structure of this element.
         * @property {markdown|undefined}
        */
        Object.defineProperty(this, 'requirements', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.requirements,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.requirements = valueProvided;
            }
        });

        /**
         * @description Identifies additional names by which this element might also be known.
         * @property {String[]|undefined}
        */
        Object.defineProperty(this, 'alias', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.alias,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.alias = Array.isArray(valueProvided) ? valueProvided.map(v => v) : [valueProvided];
            }
        });

        /**
         * @description The minimum number of times this element SHALL appear in the instance.
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'min', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.min,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.min = valueProvided;
            }
        });

        /**
         * @description The maximum number of times this element is permitted to appear in the
    instance.
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'max', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.max,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.max = valueProvided;
            }
        });

        /**
         * @description Information about the base definition of the element, provided to make it
    unncessary for tools to trace the deviation of the element through the derived
    and related profiles. This information is only provided where the element
    definition represents a constraint on another element definition, and must be
    present if there is a base element definition.
         * @property {ElementDefinitionBase|undefined}
        */
        Object.defineProperty(this, 'base', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.base,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let ElementDefinitionBase = require('../complex_types/elementDefinitionBase.js');
                this.__data.base = new ElementDefinitionBase(valueProvided);
            }
        });

        /**
         * @description The data type or resource that the value of this element is permitted to be.
         * @property {ElementDefinitionType[]|undefined}
        */
        Object.defineProperty(this, 'type', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.type,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let ElementDefinitionType = require('../complex_types/elementDefinitionType.js');
                this.__data.type = Array.isArray(valueProvided) ? valueProvided.map(v => new ElementDefinitionType(v)) : [new ElementDefinitionType(valueProvided)];
            }
        });

        /**
         * @description Identifies the name of a slice defined elsewhere in the profile whose
    constraints should be applied to the current element.
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'nameReference', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.nameReference,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.nameReference = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Boolean|undefined}
        */
        Object.defineProperty(this, 'defaultValueBoolean', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueBoolean,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueBoolean = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'defaultValueInteger', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueInteger,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueInteger = valueProvided;
            }
        });

        /**
         * @description None
         * @property {decimal|undefined}
        */
        Object.defineProperty(this, 'defaultValueDecimal', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueDecimal,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueDecimal = valueProvided;
            }
        });

        /**
         * @description None
         * @property {base64Binary|undefined}
        */
        Object.defineProperty(this, 'defaultValueBase64Binary', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueBase64Binary,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueBase64Binary = valueProvided;
            }
        });

        /**
         * @description None
         * @property {instant|undefined}
        */
        Object.defineProperty(this, 'defaultValueInstant', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueInstant,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueInstant = valueProvided;
            }
        });

        /**
         * @description None
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'defaultValueString', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueString,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueString = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uri|undefined}
        */
        Object.defineProperty(this, 'defaultValueUri', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueUri,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueUri = valueProvided;
            }
        });

        /**
         * @description None
         * @property {date|undefined}
        */
        Object.defineProperty(this, 'defaultValueDate', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueDate,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueDate = valueProvided;
            }
        });

        /**
         * @description None
         * @property {dateTime|undefined}
        */
        Object.defineProperty(this, 'defaultValueDateTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueDateTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueDateTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {time|undefined}
        */
        Object.defineProperty(this, 'defaultValueTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {code|undefined}
        */
        Object.defineProperty(this, 'defaultValueCode', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueCode,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueCode = valueProvided;
            }
        });

        /**
         * @description None
         * @property {oid|undefined}
        */
        Object.defineProperty(this, 'defaultValueOid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueOid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueOid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uuid|undefined}
        */
        Object.defineProperty(this, 'defaultValueUuid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueUuid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueUuid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {id|undefined}
        */
        Object.defineProperty(this, 'defaultValueId', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueId,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueId = valueProvided;
            }
        });

        /**
         * @description None
         * @property {unsignedInt|undefined}
        */
        Object.defineProperty(this, 'defaultValueUnsignedInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueUnsignedInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueUnsignedInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'defaultValuePositiveInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValuePositiveInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValuePositiveInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {markdown|undefined}
        */
        Object.defineProperty(this, 'defaultValueMarkdown', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueMarkdown,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.defaultValueMarkdown = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Annotation|undefined}
        */
        Object.defineProperty(this, 'defaultValueAnnotation', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueAnnotation,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Annotation = require('../complex_types/annotation.js');
                this.__data.defaultValueAnnotation = new Annotation(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Attachment|undefined}
        */
        Object.defineProperty(this, 'defaultValueAttachment', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueAttachment,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Attachment = require('../complex_types/attachment.js');
                this.__data.defaultValueAttachment = new Attachment(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Identifier|undefined}
        */
        Object.defineProperty(this, 'defaultValueIdentifier', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueIdentifier,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Identifier = require('../complex_types/identifier.js');
                this.__data.defaultValueIdentifier = new Identifier(valueProvided);
            }
        });

        /**
         * @description None
         * @property {CodeableConcept|undefined}
        */
        Object.defineProperty(this, 'defaultValueCodeableConcept', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueCodeableConcept,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let CodeableConcept = require('../complex_types/codeableConcept.js');
                this.__data.defaultValueCodeableConcept = new CodeableConcept(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Coding|undefined}
        */
        Object.defineProperty(this, 'defaultValueCoding', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueCoding,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Coding = require('../complex_types/coding.js');
                this.__data.defaultValueCoding = new Coding(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'defaultValueQuantity', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueQuantity,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.defaultValueQuantity = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Range|undefined}
        */
        Object.defineProperty(this, 'defaultValueRange', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueRange,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Range = require('../complex_types/range.js');
                this.__data.defaultValueRange = new Range(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Period|undefined}
        */
        Object.defineProperty(this, 'defaultValuePeriod', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValuePeriod,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Period = require('../complex_types/period.js');
                this.__data.defaultValuePeriod = new Period(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Ratio|undefined}
        */
        Object.defineProperty(this, 'defaultValueRatio', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueRatio,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Ratio = require('../complex_types/ratio.js');
                this.__data.defaultValueRatio = new Ratio(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Reference|undefined}
        */
        Object.defineProperty(this, 'defaultValueReference', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueReference,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Reference = require('../complex_types/reference.js');
                this.__data.defaultValueReference = new Reference(valueProvided);
            }
        });

        /**
         * @description None
         * @property {SampledData|undefined}
        */
        Object.defineProperty(this, 'defaultValueSampledData', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueSampledData,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let SampledData = require('../complex_types/sampledData.js');
                this.__data.defaultValueSampledData = new SampledData(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Signature|undefined}
        */
        Object.defineProperty(this, 'defaultValueSignature', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueSignature,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Signature = require('../complex_types/signature.js');
                this.__data.defaultValueSignature = new Signature(valueProvided);
            }
        });

        /**
         * @description None
         * @property {HumanName|undefined}
        */
        Object.defineProperty(this, 'defaultValueHumanName', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueHumanName,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let HumanName = require('../complex_types/humanName.js');
                this.__data.defaultValueHumanName = new HumanName(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Address|undefined}
        */
        Object.defineProperty(this, 'defaultValueAddress', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueAddress,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Address = require('../complex_types/address.js');
                this.__data.defaultValueAddress = new Address(valueProvided);
            }
        });

        /**
         * @description None
         * @property {ContactPoint|undefined}
        */
        Object.defineProperty(this, 'defaultValueContactPoint', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueContactPoint,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let ContactPoint = require('../complex_types/contactPoint.js');
                this.__data.defaultValueContactPoint = new ContactPoint(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Timing|undefined}
        */
        Object.defineProperty(this, 'defaultValueTiming', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueTiming,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Timing = require('../complex_types/timing.js');
                this.__data.defaultValueTiming = new Timing(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Meta|undefined}
        */
        Object.defineProperty(this, 'defaultValueMeta', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.defaultValueMeta,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Meta = require('../complex_types/meta.js');
                this.__data.defaultValueMeta = new Meta(valueProvided);
            }
        });

        /**
         * @description The Implicit meaning that is to be understood when this element is missing
    (e.g. 'when this element is missing, the period is ongoing'.
         * @property {markdown|undefined}
        */
        Object.defineProperty(this, 'meaningWhenMissing', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.meaningWhenMissing,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.meaningWhenMissing = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Boolean|undefined}
        */
        Object.defineProperty(this, 'fixedBoolean', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedBoolean,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedBoolean = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'fixedInteger', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedInteger,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedInteger = valueProvided;
            }
        });

        /**
         * @description None
         * @property {decimal|undefined}
        */
        Object.defineProperty(this, 'fixedDecimal', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedDecimal,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedDecimal = valueProvided;
            }
        });

        /**
         * @description None
         * @property {base64Binary|undefined}
        */
        Object.defineProperty(this, 'fixedBase64Binary', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedBase64Binary,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedBase64Binary = valueProvided;
            }
        });

        /**
         * @description None
         * @property {instant|undefined}
        */
        Object.defineProperty(this, 'fixedInstant', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedInstant,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedInstant = valueProvided;
            }
        });

        /**
         * @description None
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'fixedString', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedString,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedString = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uri|undefined}
        */
        Object.defineProperty(this, 'fixedUri', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedUri,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedUri = valueProvided;
            }
        });

        /**
         * @description None
         * @property {date|undefined}
        */
        Object.defineProperty(this, 'fixedDate', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedDate,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedDate = valueProvided;
            }
        });

        /**
         * @description None
         * @property {dateTime|undefined}
        */
        Object.defineProperty(this, 'fixedDateTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedDateTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedDateTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {time|undefined}
        */
        Object.defineProperty(this, 'fixedTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {code|undefined}
        */
        Object.defineProperty(this, 'fixedCode', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedCode,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedCode = valueProvided;
            }
        });

        /**
         * @description None
         * @property {oid|undefined}
        */
        Object.defineProperty(this, 'fixedOid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedOid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedOid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uuid|undefined}
        */
        Object.defineProperty(this, 'fixedUuid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedUuid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedUuid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {id|undefined}
        */
        Object.defineProperty(this, 'fixedId', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedId,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedId = valueProvided;
            }
        });

        /**
         * @description None
         * @property {unsignedInt|undefined}
        */
        Object.defineProperty(this, 'fixedUnsignedInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedUnsignedInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedUnsignedInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'fixedPositiveInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedPositiveInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedPositiveInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {markdown|undefined}
        */
        Object.defineProperty(this, 'fixedMarkdown', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedMarkdown,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.fixedMarkdown = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Annotation|undefined}
        */
        Object.defineProperty(this, 'fixedAnnotation', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedAnnotation,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Annotation = require('../complex_types/annotation.js');
                this.__data.fixedAnnotation = new Annotation(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Attachment|undefined}
        */
        Object.defineProperty(this, 'fixedAttachment', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedAttachment,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Attachment = require('../complex_types/attachment.js');
                this.__data.fixedAttachment = new Attachment(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Identifier|undefined}
        */
        Object.defineProperty(this, 'fixedIdentifier', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedIdentifier,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Identifier = require('../complex_types/identifier.js');
                this.__data.fixedIdentifier = new Identifier(valueProvided);
            }
        });

        /**
         * @description None
         * @property {CodeableConcept|undefined}
        */
        Object.defineProperty(this, 'fixedCodeableConcept', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedCodeableConcept,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let CodeableConcept = require('../complex_types/codeableConcept.js');
                this.__data.fixedCodeableConcept = new CodeableConcept(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Coding|undefined}
        */
        Object.defineProperty(this, 'fixedCoding', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedCoding,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Coding = require('../complex_types/coding.js');
                this.__data.fixedCoding = new Coding(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'fixedQuantity', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedQuantity,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.fixedQuantity = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Range|undefined}
        */
        Object.defineProperty(this, 'fixedRange', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedRange,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Range = require('../complex_types/range.js');
                this.__data.fixedRange = new Range(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Period|undefined}
        */
        Object.defineProperty(this, 'fixedPeriod', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedPeriod,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Period = require('../complex_types/period.js');
                this.__data.fixedPeriod = new Period(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Ratio|undefined}
        */
        Object.defineProperty(this, 'fixedRatio', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedRatio,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Ratio = require('../complex_types/ratio.js');
                this.__data.fixedRatio = new Ratio(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Reference|undefined}
        */
        Object.defineProperty(this, 'fixedReference', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedReference,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Reference = require('../complex_types/reference.js');
                this.__data.fixedReference = new Reference(valueProvided);
            }
        });

        /**
         * @description None
         * @property {SampledData|undefined}
        */
        Object.defineProperty(this, 'fixedSampledData', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedSampledData,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let SampledData = require('../complex_types/sampledData.js');
                this.__data.fixedSampledData = new SampledData(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Signature|undefined}
        */
        Object.defineProperty(this, 'fixedSignature', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedSignature,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Signature = require('../complex_types/signature.js');
                this.__data.fixedSignature = new Signature(valueProvided);
            }
        });

        /**
         * @description None
         * @property {HumanName|undefined}
        */
        Object.defineProperty(this, 'fixedHumanName', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedHumanName,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let HumanName = require('../complex_types/humanName.js');
                this.__data.fixedHumanName = new HumanName(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Address|undefined}
        */
        Object.defineProperty(this, 'fixedAddress', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedAddress,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Address = require('../complex_types/address.js');
                this.__data.fixedAddress = new Address(valueProvided);
            }
        });

        /**
         * @description None
         * @property {ContactPoint|undefined}
        */
        Object.defineProperty(this, 'fixedContactPoint', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedContactPoint,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let ContactPoint = require('../complex_types/contactPoint.js');
                this.__data.fixedContactPoint = new ContactPoint(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Timing|undefined}
        */
        Object.defineProperty(this, 'fixedTiming', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedTiming,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Timing = require('../complex_types/timing.js');
                this.__data.fixedTiming = new Timing(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Meta|undefined}
        */
        Object.defineProperty(this, 'fixedMeta', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.fixedMeta,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Meta = require('../complex_types/meta.js');
                this.__data.fixedMeta = new Meta(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Boolean|undefined}
        */
        Object.defineProperty(this, 'patternBoolean', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternBoolean,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternBoolean = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'patternInteger', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternInteger,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternInteger = valueProvided;
            }
        });

        /**
         * @description None
         * @property {decimal|undefined}
        */
        Object.defineProperty(this, 'patternDecimal', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternDecimal,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternDecimal = valueProvided;
            }
        });

        /**
         * @description None
         * @property {base64Binary|undefined}
        */
        Object.defineProperty(this, 'patternBase64Binary', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternBase64Binary,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternBase64Binary = valueProvided;
            }
        });

        /**
         * @description None
         * @property {instant|undefined}
        */
        Object.defineProperty(this, 'patternInstant', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternInstant,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternInstant = valueProvided;
            }
        });

        /**
         * @description None
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'patternString', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternString,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternString = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uri|undefined}
        */
        Object.defineProperty(this, 'patternUri', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternUri,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternUri = valueProvided;
            }
        });

        /**
         * @description None
         * @property {date|undefined}
        */
        Object.defineProperty(this, 'patternDate', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternDate,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternDate = valueProvided;
            }
        });

        /**
         * @description None
         * @property {dateTime|undefined}
        */
        Object.defineProperty(this, 'patternDateTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternDateTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternDateTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {time|undefined}
        */
        Object.defineProperty(this, 'patternTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {code|undefined}
        */
        Object.defineProperty(this, 'patternCode', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternCode,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternCode = valueProvided;
            }
        });

        /**
         * @description None
         * @property {oid|undefined}
        */
        Object.defineProperty(this, 'patternOid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternOid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternOid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uuid|undefined}
        */
        Object.defineProperty(this, 'patternUuid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternUuid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternUuid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {id|undefined}
        */
        Object.defineProperty(this, 'patternId', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternId,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternId = valueProvided;
            }
        });

        /**
         * @description None
         * @property {unsignedInt|undefined}
        */
        Object.defineProperty(this, 'patternUnsignedInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternUnsignedInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternUnsignedInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'patternPositiveInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternPositiveInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternPositiveInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {markdown|undefined}
        */
        Object.defineProperty(this, 'patternMarkdown', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternMarkdown,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.patternMarkdown = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Annotation|undefined}
        */
        Object.defineProperty(this, 'patternAnnotation', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternAnnotation,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Annotation = require('../complex_types/annotation.js');
                this.__data.patternAnnotation = new Annotation(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Attachment|undefined}
        */
        Object.defineProperty(this, 'patternAttachment', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternAttachment,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Attachment = require('../complex_types/attachment.js');
                this.__data.patternAttachment = new Attachment(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Identifier|undefined}
        */
        Object.defineProperty(this, 'patternIdentifier', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternIdentifier,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Identifier = require('../complex_types/identifier.js');
                this.__data.patternIdentifier = new Identifier(valueProvided);
            }
        });

        /**
         * @description None
         * @property {CodeableConcept|undefined}
        */
        Object.defineProperty(this, 'patternCodeableConcept', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternCodeableConcept,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let CodeableConcept = require('../complex_types/codeableConcept.js');
                this.__data.patternCodeableConcept = new CodeableConcept(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Coding|undefined}
        */
        Object.defineProperty(this, 'patternCoding', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternCoding,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Coding = require('../complex_types/coding.js');
                this.__data.patternCoding = new Coding(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'patternQuantity', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternQuantity,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.patternQuantity = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Range|undefined}
        */
        Object.defineProperty(this, 'patternRange', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternRange,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Range = require('../complex_types/range.js');
                this.__data.patternRange = new Range(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Period|undefined}
        */
        Object.defineProperty(this, 'patternPeriod', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternPeriod,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Period = require('../complex_types/period.js');
                this.__data.patternPeriod = new Period(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Ratio|undefined}
        */
        Object.defineProperty(this, 'patternRatio', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternRatio,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Ratio = require('../complex_types/ratio.js');
                this.__data.patternRatio = new Ratio(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Reference|undefined}
        */
        Object.defineProperty(this, 'patternReference', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternReference,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Reference = require('../complex_types/reference.js');
                this.__data.patternReference = new Reference(valueProvided);
            }
        });

        /**
         * @description None
         * @property {SampledData|undefined}
        */
        Object.defineProperty(this, 'patternSampledData', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternSampledData,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let SampledData = require('../complex_types/sampledData.js');
                this.__data.patternSampledData = new SampledData(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Signature|undefined}
        */
        Object.defineProperty(this, 'patternSignature', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternSignature,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Signature = require('../complex_types/signature.js');
                this.__data.patternSignature = new Signature(valueProvided);
            }
        });

        /**
         * @description None
         * @property {HumanName|undefined}
        */
        Object.defineProperty(this, 'patternHumanName', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternHumanName,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let HumanName = require('../complex_types/humanName.js');
                this.__data.patternHumanName = new HumanName(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Address|undefined}
        */
        Object.defineProperty(this, 'patternAddress', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternAddress,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Address = require('../complex_types/address.js');
                this.__data.patternAddress = new Address(valueProvided);
            }
        });

        /**
         * @description None
         * @property {ContactPoint|undefined}
        */
        Object.defineProperty(this, 'patternContactPoint', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternContactPoint,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let ContactPoint = require('../complex_types/contactPoint.js');
                this.__data.patternContactPoint = new ContactPoint(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Timing|undefined}
        */
        Object.defineProperty(this, 'patternTiming', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternTiming,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Timing = require('../complex_types/timing.js');
                this.__data.patternTiming = new Timing(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Meta|undefined}
        */
        Object.defineProperty(this, 'patternMeta', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.patternMeta,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Meta = require('../complex_types/meta.js');
                this.__data.patternMeta = new Meta(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Boolean|undefined}
        */
        Object.defineProperty(this, 'exampleBoolean', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleBoolean,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleBoolean = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'exampleInteger', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleInteger,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleInteger = valueProvided;
            }
        });

        /**
         * @description None
         * @property {decimal|undefined}
        */
        Object.defineProperty(this, 'exampleDecimal', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleDecimal,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleDecimal = valueProvided;
            }
        });

        /**
         * @description None
         * @property {base64Binary|undefined}
        */
        Object.defineProperty(this, 'exampleBase64Binary', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleBase64Binary,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleBase64Binary = valueProvided;
            }
        });

        /**
         * @description None
         * @property {instant|undefined}
        */
        Object.defineProperty(this, 'exampleInstant', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleInstant,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleInstant = valueProvided;
            }
        });

        /**
         * @description None
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'exampleString', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleString,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleString = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uri|undefined}
        */
        Object.defineProperty(this, 'exampleUri', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleUri,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleUri = valueProvided;
            }
        });

        /**
         * @description None
         * @property {date|undefined}
        */
        Object.defineProperty(this, 'exampleDate', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleDate,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleDate = valueProvided;
            }
        });

        /**
         * @description None
         * @property {dateTime|undefined}
        */
        Object.defineProperty(this, 'exampleDateTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleDateTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleDateTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {time|undefined}
        */
        Object.defineProperty(this, 'exampleTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {code|undefined}
        */
        Object.defineProperty(this, 'exampleCode', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleCode,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleCode = valueProvided;
            }
        });

        /**
         * @description None
         * @property {oid|undefined}
        */
        Object.defineProperty(this, 'exampleOid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleOid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleOid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uuid|undefined}
        */
        Object.defineProperty(this, 'exampleUuid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleUuid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleUuid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {id|undefined}
        */
        Object.defineProperty(this, 'exampleId', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleId,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleId = valueProvided;
            }
        });

        /**
         * @description None
         * @property {unsignedInt|undefined}
        */
        Object.defineProperty(this, 'exampleUnsignedInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleUnsignedInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleUnsignedInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'examplePositiveInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.examplePositiveInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.examplePositiveInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {markdown|undefined}
        */
        Object.defineProperty(this, 'exampleMarkdown', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleMarkdown,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.exampleMarkdown = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Annotation|undefined}
        */
        Object.defineProperty(this, 'exampleAnnotation', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleAnnotation,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Annotation = require('../complex_types/annotation.js');
                this.__data.exampleAnnotation = new Annotation(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Attachment|undefined}
        */
        Object.defineProperty(this, 'exampleAttachment', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleAttachment,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Attachment = require('../complex_types/attachment.js');
                this.__data.exampleAttachment = new Attachment(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Identifier|undefined}
        */
        Object.defineProperty(this, 'exampleIdentifier', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleIdentifier,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Identifier = require('../complex_types/identifier.js');
                this.__data.exampleIdentifier = new Identifier(valueProvided);
            }
        });

        /**
         * @description None
         * @property {CodeableConcept|undefined}
        */
        Object.defineProperty(this, 'exampleCodeableConcept', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleCodeableConcept,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let CodeableConcept = require('../complex_types/codeableConcept.js');
                this.__data.exampleCodeableConcept = new CodeableConcept(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Coding|undefined}
        */
        Object.defineProperty(this, 'exampleCoding', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleCoding,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Coding = require('../complex_types/coding.js');
                this.__data.exampleCoding = new Coding(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'exampleQuantity', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleQuantity,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.exampleQuantity = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Range|undefined}
        */
        Object.defineProperty(this, 'exampleRange', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleRange,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Range = require('../complex_types/range.js');
                this.__data.exampleRange = new Range(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Period|undefined}
        */
        Object.defineProperty(this, 'examplePeriod', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.examplePeriod,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Period = require('../complex_types/period.js');
                this.__data.examplePeriod = new Period(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Ratio|undefined}
        */
        Object.defineProperty(this, 'exampleRatio', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleRatio,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Ratio = require('../complex_types/ratio.js');
                this.__data.exampleRatio = new Ratio(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Reference|undefined}
        */
        Object.defineProperty(this, 'exampleReference', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleReference,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Reference = require('../complex_types/reference.js');
                this.__data.exampleReference = new Reference(valueProvided);
            }
        });

        /**
         * @description None
         * @property {SampledData|undefined}
        */
        Object.defineProperty(this, 'exampleSampledData', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleSampledData,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let SampledData = require('../complex_types/sampledData.js');
                this.__data.exampleSampledData = new SampledData(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Signature|undefined}
        */
        Object.defineProperty(this, 'exampleSignature', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleSignature,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Signature = require('../complex_types/signature.js');
                this.__data.exampleSignature = new Signature(valueProvided);
            }
        });

        /**
         * @description None
         * @property {HumanName|undefined}
        */
        Object.defineProperty(this, 'exampleHumanName', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleHumanName,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let HumanName = require('../complex_types/humanName.js');
                this.__data.exampleHumanName = new HumanName(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Address|undefined}
        */
        Object.defineProperty(this, 'exampleAddress', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleAddress,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Address = require('../complex_types/address.js');
                this.__data.exampleAddress = new Address(valueProvided);
            }
        });

        /**
         * @description None
         * @property {ContactPoint|undefined}
        */
        Object.defineProperty(this, 'exampleContactPoint', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleContactPoint,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let ContactPoint = require('../complex_types/contactPoint.js');
                this.__data.exampleContactPoint = new ContactPoint(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Timing|undefined}
        */
        Object.defineProperty(this, 'exampleTiming', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleTiming,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Timing = require('../complex_types/timing.js');
                this.__data.exampleTiming = new Timing(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Meta|undefined}
        */
        Object.defineProperty(this, 'exampleMeta', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.exampleMeta,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Meta = require('../complex_types/meta.js');
                this.__data.exampleMeta = new Meta(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Boolean|undefined}
        */
        Object.defineProperty(this, 'minValueBoolean', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueBoolean,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueBoolean = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'minValueInteger', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueInteger,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueInteger = valueProvided;
            }
        });

        /**
         * @description None
         * @property {decimal|undefined}
        */
        Object.defineProperty(this, 'minValueDecimal', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueDecimal,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueDecimal = valueProvided;
            }
        });

        /**
         * @description None
         * @property {base64Binary|undefined}
        */
        Object.defineProperty(this, 'minValueBase64Binary', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueBase64Binary,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueBase64Binary = valueProvided;
            }
        });

        /**
         * @description None
         * @property {instant|undefined}
        */
        Object.defineProperty(this, 'minValueInstant', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueInstant,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueInstant = valueProvided;
            }
        });

        /**
         * @description None
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'minValueString', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueString,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueString = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uri|undefined}
        */
        Object.defineProperty(this, 'minValueUri', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueUri,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueUri = valueProvided;
            }
        });

        /**
         * @description None
         * @property {date|undefined}
        */
        Object.defineProperty(this, 'minValueDate', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueDate,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueDate = valueProvided;
            }
        });

        /**
         * @description None
         * @property {dateTime|undefined}
        */
        Object.defineProperty(this, 'minValueDateTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueDateTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueDateTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {time|undefined}
        */
        Object.defineProperty(this, 'minValueTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {code|undefined}
        */
        Object.defineProperty(this, 'minValueCode', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueCode,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueCode = valueProvided;
            }
        });

        /**
         * @description None
         * @property {oid|undefined}
        */
        Object.defineProperty(this, 'minValueOid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueOid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueOid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uuid|undefined}
        */
        Object.defineProperty(this, 'minValueUuid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueUuid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueUuid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {id|undefined}
        */
        Object.defineProperty(this, 'minValueId', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueId,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueId = valueProvided;
            }
        });

        /**
         * @description None
         * @property {unsignedInt|undefined}
        */
        Object.defineProperty(this, 'minValueUnsignedInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueUnsignedInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueUnsignedInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'minValuePositiveInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValuePositiveInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValuePositiveInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {markdown|undefined}
        */
        Object.defineProperty(this, 'minValueMarkdown', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueMarkdown,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.minValueMarkdown = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Annotation|undefined}
        */
        Object.defineProperty(this, 'minValueAnnotation', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueAnnotation,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Annotation = require('../complex_types/annotation.js');
                this.__data.minValueAnnotation = new Annotation(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Attachment|undefined}
        */
        Object.defineProperty(this, 'minValueAttachment', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueAttachment,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Attachment = require('../complex_types/attachment.js');
                this.__data.minValueAttachment = new Attachment(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Identifier|undefined}
        */
        Object.defineProperty(this, 'minValueIdentifier', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueIdentifier,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Identifier = require('../complex_types/identifier.js');
                this.__data.minValueIdentifier = new Identifier(valueProvided);
            }
        });

        /**
         * @description None
         * @property {CodeableConcept|undefined}
        */
        Object.defineProperty(this, 'minValueCodeableConcept', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueCodeableConcept,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let CodeableConcept = require('../complex_types/codeableConcept.js');
                this.__data.minValueCodeableConcept = new CodeableConcept(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Coding|undefined}
        */
        Object.defineProperty(this, 'minValueCoding', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueCoding,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Coding = require('../complex_types/coding.js');
                this.__data.minValueCoding = new Coding(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'minValueQuantity', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueQuantity,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.minValueQuantity = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Range|undefined}
        */
        Object.defineProperty(this, 'minValueRange', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueRange,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Range = require('../complex_types/range.js');
                this.__data.minValueRange = new Range(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Period|undefined}
        */
        Object.defineProperty(this, 'minValuePeriod', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValuePeriod,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Period = require('../complex_types/period.js');
                this.__data.minValuePeriod = new Period(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Ratio|undefined}
        */
        Object.defineProperty(this, 'minValueRatio', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueRatio,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Ratio = require('../complex_types/ratio.js');
                this.__data.minValueRatio = new Ratio(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Reference|undefined}
        */
        Object.defineProperty(this, 'minValueReference', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueReference,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Reference = require('../complex_types/reference.js');
                this.__data.minValueReference = new Reference(valueProvided);
            }
        });

        /**
         * @description None
         * @property {SampledData|undefined}
        */
        Object.defineProperty(this, 'minValueSampledData', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueSampledData,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let SampledData = require('../complex_types/sampledData.js');
                this.__data.minValueSampledData = new SampledData(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Signature|undefined}
        */
        Object.defineProperty(this, 'minValueSignature', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueSignature,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Signature = require('../complex_types/signature.js');
                this.__data.minValueSignature = new Signature(valueProvided);
            }
        });

        /**
         * @description None
         * @property {HumanName|undefined}
        */
        Object.defineProperty(this, 'minValueHumanName', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueHumanName,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let HumanName = require('../complex_types/humanName.js');
                this.__data.minValueHumanName = new HumanName(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Address|undefined}
        */
        Object.defineProperty(this, 'minValueAddress', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueAddress,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Address = require('../complex_types/address.js');
                this.__data.minValueAddress = new Address(valueProvided);
            }
        });

        /**
         * @description None
         * @property {ContactPoint|undefined}
        */
        Object.defineProperty(this, 'minValueContactPoint', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueContactPoint,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let ContactPoint = require('../complex_types/contactPoint.js');
                this.__data.minValueContactPoint = new ContactPoint(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Timing|undefined}
        */
        Object.defineProperty(this, 'minValueTiming', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueTiming,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Timing = require('../complex_types/timing.js');
                this.__data.minValueTiming = new Timing(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Meta|undefined}
        */
        Object.defineProperty(this, 'minValueMeta', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.minValueMeta,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Meta = require('../complex_types/meta.js');
                this.__data.minValueMeta = new Meta(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Boolean|undefined}
        */
        Object.defineProperty(this, 'maxValueBoolean', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueBoolean,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueBoolean = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'maxValueInteger', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueInteger,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueInteger = valueProvided;
            }
        });

        /**
         * @description None
         * @property {decimal|undefined}
        */
        Object.defineProperty(this, 'maxValueDecimal', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueDecimal,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueDecimal = valueProvided;
            }
        });

        /**
         * @description None
         * @property {base64Binary|undefined}
        */
        Object.defineProperty(this, 'maxValueBase64Binary', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueBase64Binary,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueBase64Binary = valueProvided;
            }
        });

        /**
         * @description None
         * @property {instant|undefined}
        */
        Object.defineProperty(this, 'maxValueInstant', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueInstant,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueInstant = valueProvided;
            }
        });

        /**
         * @description None
         * @property {String|undefined}
        */
        Object.defineProperty(this, 'maxValueString', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueString,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueString = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uri|undefined}
        */
        Object.defineProperty(this, 'maxValueUri', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueUri,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueUri = valueProvided;
            }
        });

        /**
         * @description None
         * @property {date|undefined}
        */
        Object.defineProperty(this, 'maxValueDate', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueDate,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueDate = valueProvided;
            }
        });

        /**
         * @description None
         * @property {dateTime|undefined}
        */
        Object.defineProperty(this, 'maxValueDateTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueDateTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueDateTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {time|undefined}
        */
        Object.defineProperty(this, 'maxValueTime', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueTime,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueTime = valueProvided;
            }
        });

        /**
         * @description None
         * @property {code|undefined}
        */
        Object.defineProperty(this, 'maxValueCode', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueCode,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueCode = valueProvided;
            }
        });

        /**
         * @description None
         * @property {oid|undefined}
        */
        Object.defineProperty(this, 'maxValueOid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueOid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueOid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {uuid|undefined}
        */
        Object.defineProperty(this, 'maxValueUuid', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueUuid,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueUuid = valueProvided;
            }
        });

        /**
         * @description None
         * @property {id|undefined}
        */
        Object.defineProperty(this, 'maxValueId', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueId,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueId = valueProvided;
            }
        });

        /**
         * @description None
         * @property {unsignedInt|undefined}
        */
        Object.defineProperty(this, 'maxValueUnsignedInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueUnsignedInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueUnsignedInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'maxValuePositiveInt', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValuePositiveInt,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValuePositiveInt = valueProvided;
            }
        });

        /**
         * @description None
         * @property {markdown|undefined}
        */
        Object.defineProperty(this, 'maxValueMarkdown', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueMarkdown,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxValueMarkdown = valueProvided;
            }
        });

        /**
         * @description None
         * @property {Annotation|undefined}
        */
        Object.defineProperty(this, 'maxValueAnnotation', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueAnnotation,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Annotation = require('../complex_types/annotation.js');
                this.__data.maxValueAnnotation = new Annotation(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Attachment|undefined}
        */
        Object.defineProperty(this, 'maxValueAttachment', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueAttachment,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Attachment = require('../complex_types/attachment.js');
                this.__data.maxValueAttachment = new Attachment(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Identifier|undefined}
        */
        Object.defineProperty(this, 'maxValueIdentifier', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueIdentifier,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Identifier = require('../complex_types/identifier.js');
                this.__data.maxValueIdentifier = new Identifier(valueProvided);
            }
        });

        /**
         * @description None
         * @property {CodeableConcept|undefined}
        */
        Object.defineProperty(this, 'maxValueCodeableConcept', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueCodeableConcept,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let CodeableConcept = require('../complex_types/codeableConcept.js');
                this.__data.maxValueCodeableConcept = new CodeableConcept(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Coding|undefined}
        */
        Object.defineProperty(this, 'maxValueCoding', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueCoding,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Coding = require('../complex_types/coding.js');
                this.__data.maxValueCoding = new Coding(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Quantity|undefined}
        */
        Object.defineProperty(this, 'maxValueQuantity', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueQuantity,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Quantity = require('../complex_types/quantity.js');
                this.__data.maxValueQuantity = new Quantity(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Range|undefined}
        */
        Object.defineProperty(this, 'maxValueRange', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueRange,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Range = require('../complex_types/range.js');
                this.__data.maxValueRange = new Range(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Period|undefined}
        */
        Object.defineProperty(this, 'maxValuePeriod', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValuePeriod,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Period = require('../complex_types/period.js');
                this.__data.maxValuePeriod = new Period(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Ratio|undefined}
        */
        Object.defineProperty(this, 'maxValueRatio', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueRatio,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Ratio = require('../complex_types/ratio.js');
                this.__data.maxValueRatio = new Ratio(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Reference|undefined}
        */
        Object.defineProperty(this, 'maxValueReference', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueReference,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Reference = require('../complex_types/reference.js');
                this.__data.maxValueReference = new Reference(valueProvided);
            }
        });

        /**
         * @description None
         * @property {SampledData|undefined}
        */
        Object.defineProperty(this, 'maxValueSampledData', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueSampledData,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let SampledData = require('../complex_types/sampledData.js');
                this.__data.maxValueSampledData = new SampledData(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Signature|undefined}
        */
        Object.defineProperty(this, 'maxValueSignature', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueSignature,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Signature = require('../complex_types/signature.js');
                this.__data.maxValueSignature = new Signature(valueProvided);
            }
        });

        /**
         * @description None
         * @property {HumanName|undefined}
        */
        Object.defineProperty(this, 'maxValueHumanName', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueHumanName,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let HumanName = require('../complex_types/humanName.js');
                this.__data.maxValueHumanName = new HumanName(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Address|undefined}
        */
        Object.defineProperty(this, 'maxValueAddress', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueAddress,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Address = require('../complex_types/address.js');
                this.__data.maxValueAddress = new Address(valueProvided);
            }
        });

        /**
         * @description None
         * @property {ContactPoint|undefined}
        */
        Object.defineProperty(this, 'maxValueContactPoint', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueContactPoint,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let ContactPoint = require('../complex_types/contactPoint.js');
                this.__data.maxValueContactPoint = new ContactPoint(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Timing|undefined}
        */
        Object.defineProperty(this, 'maxValueTiming', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueTiming,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Timing = require('../complex_types/timing.js');
                this.__data.maxValueTiming = new Timing(valueProvided);
            }
        });

        /**
         * @description None
         * @property {Meta|undefined}
        */
        Object.defineProperty(this, 'maxValueMeta', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxValueMeta,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let Meta = require('../complex_types/meta.js');
                this.__data.maxValueMeta = new Meta(valueProvided);
            }
        });

        /**
         * @description Indicates the maximum length in characters that is permitted to be present in
    conformant instances and which is expected to be supported by conformant
    consumers that support the element.
         * @property {Int|undefined}
        */
        Object.defineProperty(this, 'maxLength', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.maxLength,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.maxLength = valueProvided;
            }
        });

        /**
         * @description A reference to an invariant that may make additional statements about the
    cardinality or value in the instance.
         * @property {id[]|undefined}
        */
        Object.defineProperty(this, 'condition', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.condition,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.condition = Array.isArray(valueProvided) ? valueProvided.map(v => v) : [valueProvided];
            }
        });

        /**
         * @description Formal constraints such as co-occurrence and other constraints that can be
    computationally evaluated within the context of the instance.
         * @property {ElementDefinitionConstraint[]|undefined}
        */
        Object.defineProperty(this, 'constraint', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.constraint,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let ElementDefinitionConstraint = require('../complex_types/elementDefinitionConstraint.js');
                this.__data.constraint = Array.isArray(valueProvided) ? valueProvided.map(v => new ElementDefinitionConstraint(v)) : [new ElementDefinitionConstraint(valueProvided)];
            }
        });

        /**
         * @description If true, implementations that produce or consume resources SHALL provide
    "support" for the element in some meaningful way.  If false, the element may
    be ignored and not supported.
         * @property {Boolean|undefined}
        */
        Object.defineProperty(this, 'mustSupport', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.mustSupport,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.mustSupport = valueProvided;
            }
        });

        /**
         * @description If true, the value of this element affects the interpretation of the element
    or resource that contains it, and the value of the element cannot be ignored.
    Typically, this is used for status, negation and qualification codes. The
    effect of this is that the element cannot be ignored by systems: they SHALL
    either recognize the element and process it, and/or a pre-determination has
    been made that it is not relevant to their particular system.
         * @property {Boolean|undefined}
        */
        Object.defineProperty(this, 'isModifier', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.isModifier,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.isModifier = valueProvided;
            }
        });

        /**
         * @description Whether the element should be included if a client requests a search with the
    parameter _summary=true.
         * @property {Boolean|undefined}
        */
        Object.defineProperty(this, 'isSummary', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.isSummary,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                this.__data.isSummary = valueProvided;
            }
        });

        /**
         * @description Binds to a value set if this element is coded (code, Coding, CodeableConcept).
         * @property {ElementDefinitionBinding|undefined}
        */
        Object.defineProperty(this, 'binding', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.binding,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let ElementDefinitionBinding = require('../complex_types/elementDefinitionBinding.js');
                this.__data.binding = new ElementDefinitionBinding(valueProvided);
            }
        });

        /**
         * @description Identifies a concept from an external specification that roughly corresponds
    to this element.
         * @property {ElementDefinitionMapping[]|undefined}
        */
        Object.defineProperty(this, 'mapping', {
            // https://www.w3schools.com/js/js_object_es5.asp
            enumerable: true,
            configurable: true,
            get: () => this.__data.mapping,
            set: valueProvided => {
                if (valueProvided === undefined || valueProvided === null || (Array.isArray(valueProvided) && valueProvided.length === 0)) {
                    return;
                }
                let ElementDefinitionMapping = require('../complex_types/elementDefinitionMapping.js');
                this.__data.mapping = Array.isArray(valueProvided) ? valueProvided.map(v => new ElementDefinitionMapping(v)) : [new ElementDefinitionMapping(valueProvided)];
            }
        });

        // --- Now copy properties from passed in object ----
        Object.assign(this, {
            id,
            extension,
            path,
            representation,
            name,
            label,
            code,
            slicing,
            short,
            definition,
            comments,
            requirements,
            alias,
            min,
            max,
            base,
            type,
            nameReference,
            defaultValueBoolean,
            defaultValueInteger,
            defaultValueDecimal,
            defaultValueBase64Binary,
            defaultValueInstant,
            defaultValueString,
            defaultValueUri,
            defaultValueDate,
            defaultValueDateTime,
            defaultValueTime,
            defaultValueCode,
            defaultValueOid,
            defaultValueUuid,
            defaultValueId,
            defaultValueUnsignedInt,
            defaultValuePositiveInt,
            defaultValueMarkdown,
            defaultValueAnnotation,
            defaultValueAttachment,
            defaultValueIdentifier,
            defaultValueCodeableConcept,
            defaultValueCoding,
            defaultValueQuantity,
            defaultValueRange,
            defaultValuePeriod,
            defaultValueRatio,
            defaultValueReference,
            defaultValueSampledData,
            defaultValueSignature,
            defaultValueHumanName,
            defaultValueAddress,
            defaultValueContactPoint,
            defaultValueTiming,
            defaultValueMeta,
            meaningWhenMissing,
            fixedBoolean,
            fixedInteger,
            fixedDecimal,
            fixedBase64Binary,
            fixedInstant,
            fixedString,
            fixedUri,
            fixedDate,
            fixedDateTime,
            fixedTime,
            fixedCode,
            fixedOid,
            fixedUuid,
            fixedId,
            fixedUnsignedInt,
            fixedPositiveInt,
            fixedMarkdown,
            fixedAnnotation,
            fixedAttachment,
            fixedIdentifier,
            fixedCodeableConcept,
            fixedCoding,
            fixedQuantity,
            fixedRange,
            fixedPeriod,
            fixedRatio,
            fixedReference,
            fixedSampledData,
            fixedSignature,
            fixedHumanName,
            fixedAddress,
            fixedContactPoint,
            fixedTiming,
            fixedMeta,
            patternBoolean,
            patternInteger,
            patternDecimal,
            patternBase64Binary,
            patternInstant,
            patternString,
            patternUri,
            patternDate,
            patternDateTime,
            patternTime,
            patternCode,
            patternOid,
            patternUuid,
            patternId,
            patternUnsignedInt,
            patternPositiveInt,
            patternMarkdown,
            patternAnnotation,
            patternAttachment,
            patternIdentifier,
            patternCodeableConcept,
            patternCoding,
            patternQuantity,
            patternRange,
            patternPeriod,
            patternRatio,
            patternReference,
            patternSampledData,
            patternSignature,
            patternHumanName,
            patternAddress,
            patternContactPoint,
            patternTiming,
            patternMeta,
            exampleBoolean,
            exampleInteger,
            exampleDecimal,
            exampleBase64Binary,
            exampleInstant,
            exampleString,
            exampleUri,
            exampleDate,
            exampleDateTime,
            exampleTime,
            exampleCode,
            exampleOid,
            exampleUuid,
            exampleId,
            exampleUnsignedInt,
            examplePositiveInt,
            exampleMarkdown,
            exampleAnnotation,
            exampleAttachment,
            exampleIdentifier,
            exampleCodeableConcept,
            exampleCoding,
            exampleQuantity,
            exampleRange,
            examplePeriod,
            exampleRatio,
            exampleReference,
            exampleSampledData,
            exampleSignature,
            exampleHumanName,
            exampleAddress,
            exampleContactPoint,
            exampleTiming,
            exampleMeta,
            minValueBoolean,
            minValueInteger,
            minValueDecimal,
            minValueBase64Binary,
            minValueInstant,
            minValueString,
            minValueUri,
            minValueDate,
            minValueDateTime,
            minValueTime,
            minValueCode,
            minValueOid,
            minValueUuid,
            minValueId,
            minValueUnsignedInt,
            minValuePositiveInt,
            minValueMarkdown,
            minValueAnnotation,
            minValueAttachment,
            minValueIdentifier,
            minValueCodeableConcept,
            minValueCoding,
            minValueQuantity,
            minValueRange,
            minValuePeriod,
            minValueRatio,
            minValueReference,
            minValueSampledData,
            minValueSignature,
            minValueHumanName,
            minValueAddress,
            minValueContactPoint,
            minValueTiming,
            minValueMeta,
            maxValueBoolean,
            maxValueInteger,
            maxValueDecimal,
            maxValueBase64Binary,
            maxValueInstant,
            maxValueString,
            maxValueUri,
            maxValueDate,
            maxValueDateTime,
            maxValueTime,
            maxValueCode,
            maxValueOid,
            maxValueUuid,
            maxValueId,
            maxValueUnsignedInt,
            maxValuePositiveInt,
            maxValueMarkdown,
            maxValueAnnotation,
            maxValueAttachment,
            maxValueIdentifier,
            maxValueCodeableConcept,
            maxValueCoding,
            maxValueQuantity,
            maxValueRange,
            maxValuePeriod,
            maxValueRatio,
            maxValueReference,
            maxValueSampledData,
            maxValueSignature,
            maxValueHumanName,
            maxValueAddress,
            maxValueContactPoint,
            maxValueTiming,
            maxValueMeta,
            maxLength,
            condition,
            constraint,
            mustSupport,
            isModifier,
            isSummary,
            binding,
            mapping,
        });

    }



    /**
     * Returns JSON representation of entity
     * @return {Object}
     */
    toJSON() {
        const {removeNull} = require('../../../../utils/nullRemover');

        return removeNull({
            id: this.id,
            extension: this.extension && this.extension.map(v => v.toJSON()),
            path: this.path,
            representation: this.representation,
            name: this.name,
            label: this.label,
            code: this.code && this.code.map(v => v.toJSON()),
            slicing: this.slicing && this.slicing.toJSON(),
            short: this.short,
            definition: this.definition,
            comments: this.comments,
            requirements: this.requirements,
            alias: this.alias,
            min: this.min,
            max: this.max,
            base: this.base && this.base.toJSON(),
            type: this.type && this.type.map(v => v.toJSON()),
            nameReference: this.nameReference,
            defaultValueBoolean: this.defaultValueBoolean,
            defaultValueInteger: this.defaultValueInteger,
            defaultValueDecimal: this.defaultValueDecimal,
            defaultValueBase64Binary: this.defaultValueBase64Binary,
            defaultValueInstant: this.defaultValueInstant,
            defaultValueString: this.defaultValueString,
            defaultValueUri: this.defaultValueUri,
            defaultValueDate: this.defaultValueDate,
            defaultValueDateTime: this.defaultValueDateTime,
            defaultValueTime: this.defaultValueTime,
            defaultValueCode: this.defaultValueCode,
            defaultValueOid: this.defaultValueOid,
            defaultValueUuid: this.defaultValueUuid,
            defaultValueId: this.defaultValueId,
            defaultValueUnsignedInt: this.defaultValueUnsignedInt,
            defaultValuePositiveInt: this.defaultValuePositiveInt,
            defaultValueMarkdown: this.defaultValueMarkdown,
            defaultValueAnnotation: this.defaultValueAnnotation && this.defaultValueAnnotation.toJSON(),
            defaultValueAttachment: this.defaultValueAttachment && this.defaultValueAttachment.toJSON(),
            defaultValueIdentifier: this.defaultValueIdentifier && this.defaultValueIdentifier.toJSON(),
            defaultValueCodeableConcept: this.defaultValueCodeableConcept && this.defaultValueCodeableConcept.toJSON(),
            defaultValueCoding: this.defaultValueCoding && this.defaultValueCoding.toJSON(),
            defaultValueQuantity: this.defaultValueQuantity && this.defaultValueQuantity.toJSON(),
            defaultValueRange: this.defaultValueRange && this.defaultValueRange.toJSON(),
            defaultValuePeriod: this.defaultValuePeriod && this.defaultValuePeriod.toJSON(),
            defaultValueRatio: this.defaultValueRatio && this.defaultValueRatio.toJSON(),
            defaultValueReference: this.defaultValueReference && this.defaultValueReference.toJSON(),
            defaultValueSampledData: this.defaultValueSampledData && this.defaultValueSampledData.toJSON(),
            defaultValueSignature: this.defaultValueSignature && this.defaultValueSignature.toJSON(),
            defaultValueHumanName: this.defaultValueHumanName && this.defaultValueHumanName.toJSON(),
            defaultValueAddress: this.defaultValueAddress && this.defaultValueAddress.toJSON(),
            defaultValueContactPoint: this.defaultValueContactPoint && this.defaultValueContactPoint.toJSON(),
            defaultValueTiming: this.defaultValueTiming && this.defaultValueTiming.toJSON(),
            defaultValueMeta: this.defaultValueMeta && this.defaultValueMeta.toJSON(),
            meaningWhenMissing: this.meaningWhenMissing,
            fixedBoolean: this.fixedBoolean,
            fixedInteger: this.fixedInteger,
            fixedDecimal: this.fixedDecimal,
            fixedBase64Binary: this.fixedBase64Binary,
            fixedInstant: this.fixedInstant,
            fixedString: this.fixedString,
            fixedUri: this.fixedUri,
            fixedDate: this.fixedDate,
            fixedDateTime: this.fixedDateTime,
            fixedTime: this.fixedTime,
            fixedCode: this.fixedCode,
            fixedOid: this.fixedOid,
            fixedUuid: this.fixedUuid,
            fixedId: this.fixedId,
            fixedUnsignedInt: this.fixedUnsignedInt,
            fixedPositiveInt: this.fixedPositiveInt,
            fixedMarkdown: this.fixedMarkdown,
            fixedAnnotation: this.fixedAnnotation && this.fixedAnnotation.toJSON(),
            fixedAttachment: this.fixedAttachment && this.fixedAttachment.toJSON(),
            fixedIdentifier: this.fixedIdentifier && this.fixedIdentifier.toJSON(),
            fixedCodeableConcept: this.fixedCodeableConcept && this.fixedCodeableConcept.toJSON(),
            fixedCoding: this.fixedCoding && this.fixedCoding.toJSON(),
            fixedQuantity: this.fixedQuantity && this.fixedQuantity.toJSON(),
            fixedRange: this.fixedRange && this.fixedRange.toJSON(),
            fixedPeriod: this.fixedPeriod && this.fixedPeriod.toJSON(),
            fixedRatio: this.fixedRatio && this.fixedRatio.toJSON(),
            fixedReference: this.fixedReference && this.fixedReference.toJSON(),
            fixedSampledData: this.fixedSampledData && this.fixedSampledData.toJSON(),
            fixedSignature: this.fixedSignature && this.fixedSignature.toJSON(),
            fixedHumanName: this.fixedHumanName && this.fixedHumanName.toJSON(),
            fixedAddress: this.fixedAddress && this.fixedAddress.toJSON(),
            fixedContactPoint: this.fixedContactPoint && this.fixedContactPoint.toJSON(),
            fixedTiming: this.fixedTiming && this.fixedTiming.toJSON(),
            fixedMeta: this.fixedMeta && this.fixedMeta.toJSON(),
            patternBoolean: this.patternBoolean,
            patternInteger: this.patternInteger,
            patternDecimal: this.patternDecimal,
            patternBase64Binary: this.patternBase64Binary,
            patternInstant: this.patternInstant,
            patternString: this.patternString,
            patternUri: this.patternUri,
            patternDate: this.patternDate,
            patternDateTime: this.patternDateTime,
            patternTime: this.patternTime,
            patternCode: this.patternCode,
            patternOid: this.patternOid,
            patternUuid: this.patternUuid,
            patternId: this.patternId,
            patternUnsignedInt: this.patternUnsignedInt,
            patternPositiveInt: this.patternPositiveInt,
            patternMarkdown: this.patternMarkdown,
            patternAnnotation: this.patternAnnotation && this.patternAnnotation.toJSON(),
            patternAttachment: this.patternAttachment && this.patternAttachment.toJSON(),
            patternIdentifier: this.patternIdentifier && this.patternIdentifier.toJSON(),
            patternCodeableConcept: this.patternCodeableConcept && this.patternCodeableConcept.toJSON(),
            patternCoding: this.patternCoding && this.patternCoding.toJSON(),
            patternQuantity: this.patternQuantity && this.patternQuantity.toJSON(),
            patternRange: this.patternRange && this.patternRange.toJSON(),
            patternPeriod: this.patternPeriod && this.patternPeriod.toJSON(),
            patternRatio: this.patternRatio && this.patternRatio.toJSON(),
            patternReference: this.patternReference && this.patternReference.toJSON(),
            patternSampledData: this.patternSampledData && this.patternSampledData.toJSON(),
            patternSignature: this.patternSignature && this.patternSignature.toJSON(),
            patternHumanName: this.patternHumanName && this.patternHumanName.toJSON(),
            patternAddress: this.patternAddress && this.patternAddress.toJSON(),
            patternContactPoint: this.patternContactPoint && this.patternContactPoint.toJSON(),
            patternTiming: this.patternTiming && this.patternTiming.toJSON(),
            patternMeta: this.patternMeta && this.patternMeta.toJSON(),
            exampleBoolean: this.exampleBoolean,
            exampleInteger: this.exampleInteger,
            exampleDecimal: this.exampleDecimal,
            exampleBase64Binary: this.exampleBase64Binary,
            exampleInstant: this.exampleInstant,
            exampleString: this.exampleString,
            exampleUri: this.exampleUri,
            exampleDate: this.exampleDate,
            exampleDateTime: this.exampleDateTime,
            exampleTime: this.exampleTime,
            exampleCode: this.exampleCode,
            exampleOid: this.exampleOid,
            exampleUuid: this.exampleUuid,
            exampleId: this.exampleId,
            exampleUnsignedInt: this.exampleUnsignedInt,
            examplePositiveInt: this.examplePositiveInt,
            exampleMarkdown: this.exampleMarkdown,
            exampleAnnotation: this.exampleAnnotation && this.exampleAnnotation.toJSON(),
            exampleAttachment: this.exampleAttachment && this.exampleAttachment.toJSON(),
            exampleIdentifier: this.exampleIdentifier && this.exampleIdentifier.toJSON(),
            exampleCodeableConcept: this.exampleCodeableConcept && this.exampleCodeableConcept.toJSON(),
            exampleCoding: this.exampleCoding && this.exampleCoding.toJSON(),
            exampleQuantity: this.exampleQuantity && this.exampleQuantity.toJSON(),
            exampleRange: this.exampleRange && this.exampleRange.toJSON(),
            examplePeriod: this.examplePeriod && this.examplePeriod.toJSON(),
            exampleRatio: this.exampleRatio && this.exampleRatio.toJSON(),
            exampleReference: this.exampleReference && this.exampleReference.toJSON(),
            exampleSampledData: this.exampleSampledData && this.exampleSampledData.toJSON(),
            exampleSignature: this.exampleSignature && this.exampleSignature.toJSON(),
            exampleHumanName: this.exampleHumanName && this.exampleHumanName.toJSON(),
            exampleAddress: this.exampleAddress && this.exampleAddress.toJSON(),
            exampleContactPoint: this.exampleContactPoint && this.exampleContactPoint.toJSON(),
            exampleTiming: this.exampleTiming && this.exampleTiming.toJSON(),
            exampleMeta: this.exampleMeta && this.exampleMeta.toJSON(),
            minValueBoolean: this.minValueBoolean,
            minValueInteger: this.minValueInteger,
            minValueDecimal: this.minValueDecimal,
            minValueBase64Binary: this.minValueBase64Binary,
            minValueInstant: this.minValueInstant,
            minValueString: this.minValueString,
            minValueUri: this.minValueUri,
            minValueDate: this.minValueDate,
            minValueDateTime: this.minValueDateTime,
            minValueTime: this.minValueTime,
            minValueCode: this.minValueCode,
            minValueOid: this.minValueOid,
            minValueUuid: this.minValueUuid,
            minValueId: this.minValueId,
            minValueUnsignedInt: this.minValueUnsignedInt,
            minValuePositiveInt: this.minValuePositiveInt,
            minValueMarkdown: this.minValueMarkdown,
            minValueAnnotation: this.minValueAnnotation && this.minValueAnnotation.toJSON(),
            minValueAttachment: this.minValueAttachment && this.minValueAttachment.toJSON(),
            minValueIdentifier: this.minValueIdentifier && this.minValueIdentifier.toJSON(),
            minValueCodeableConcept: this.minValueCodeableConcept && this.minValueCodeableConcept.toJSON(),
            minValueCoding: this.minValueCoding && this.minValueCoding.toJSON(),
            minValueQuantity: this.minValueQuantity && this.minValueQuantity.toJSON(),
            minValueRange: this.minValueRange && this.minValueRange.toJSON(),
            minValuePeriod: this.minValuePeriod && this.minValuePeriod.toJSON(),
            minValueRatio: this.minValueRatio && this.minValueRatio.toJSON(),
            minValueReference: this.minValueReference && this.minValueReference.toJSON(),
            minValueSampledData: this.minValueSampledData && this.minValueSampledData.toJSON(),
            minValueSignature: this.minValueSignature && this.minValueSignature.toJSON(),
            minValueHumanName: this.minValueHumanName && this.minValueHumanName.toJSON(),
            minValueAddress: this.minValueAddress && this.minValueAddress.toJSON(),
            minValueContactPoint: this.minValueContactPoint && this.minValueContactPoint.toJSON(),
            minValueTiming: this.minValueTiming && this.minValueTiming.toJSON(),
            minValueMeta: this.minValueMeta && this.minValueMeta.toJSON(),
            maxValueBoolean: this.maxValueBoolean,
            maxValueInteger: this.maxValueInteger,
            maxValueDecimal: this.maxValueDecimal,
            maxValueBase64Binary: this.maxValueBase64Binary,
            maxValueInstant: this.maxValueInstant,
            maxValueString: this.maxValueString,
            maxValueUri: this.maxValueUri,
            maxValueDate: this.maxValueDate,
            maxValueDateTime: this.maxValueDateTime,
            maxValueTime: this.maxValueTime,
            maxValueCode: this.maxValueCode,
            maxValueOid: this.maxValueOid,
            maxValueUuid: this.maxValueUuid,
            maxValueId: this.maxValueId,
            maxValueUnsignedInt: this.maxValueUnsignedInt,
            maxValuePositiveInt: this.maxValuePositiveInt,
            maxValueMarkdown: this.maxValueMarkdown,
            maxValueAnnotation: this.maxValueAnnotation && this.maxValueAnnotation.toJSON(),
            maxValueAttachment: this.maxValueAttachment && this.maxValueAttachment.toJSON(),
            maxValueIdentifier: this.maxValueIdentifier && this.maxValueIdentifier.toJSON(),
            maxValueCodeableConcept: this.maxValueCodeableConcept && this.maxValueCodeableConcept.toJSON(),
            maxValueCoding: this.maxValueCoding && this.maxValueCoding.toJSON(),
            maxValueQuantity: this.maxValueQuantity && this.maxValueQuantity.toJSON(),
            maxValueRange: this.maxValueRange && this.maxValueRange.toJSON(),
            maxValuePeriod: this.maxValuePeriod && this.maxValuePeriod.toJSON(),
            maxValueRatio: this.maxValueRatio && this.maxValueRatio.toJSON(),
            maxValueReference: this.maxValueReference && this.maxValueReference.toJSON(),
            maxValueSampledData: this.maxValueSampledData && this.maxValueSampledData.toJSON(),
            maxValueSignature: this.maxValueSignature && this.maxValueSignature.toJSON(),
            maxValueHumanName: this.maxValueHumanName && this.maxValueHumanName.toJSON(),
            maxValueAddress: this.maxValueAddress && this.maxValueAddress.toJSON(),
            maxValueContactPoint: this.maxValueContactPoint && this.maxValueContactPoint.toJSON(),
            maxValueTiming: this.maxValueTiming && this.maxValueTiming.toJSON(),
            maxValueMeta: this.maxValueMeta && this.maxValueMeta.toJSON(),
            maxLength: this.maxLength,
            condition: this.condition,
            constraint: this.constraint && this.constraint.map(v => v.toJSON()),
            mustSupport: this.mustSupport,
            isModifier: this.isModifier,
            isSummary: this.isSummary,
            binding: this.binding && this.binding.toJSON(),
            mapping: this.mapping && this.mapping.map(v => v.toJSON()),
        });
    }
}

module.exports = ElementDefinition;
