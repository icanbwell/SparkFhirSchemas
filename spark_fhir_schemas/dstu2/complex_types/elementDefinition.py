from typing import Union, List, Optional

from pyspark.sql.types import StructType, StructField, StringType, ArrayType, DateType, BooleanType, IntegerType, \
    DataType, TimestampType, FloatType


# This file is auto-generated by generate_schema so do not edit manually
# noinspection PyPep8Naming
class ElementDefinitionSchema:
    """
    Captures constraints on each element within the resource, profile, or
    extension.
    If the element is present, it must have a value for at least one of the
    defined elements, an @id referenced from the Narrative, or extensions
    """
    # noinspection PyDefaultArgument
    @staticmethod
    def get_schema(max_nesting_depth: Optional[int] = 6, nesting_depth: int = 0, nesting_list: List[str] = [], max_recursion_limit: Optional[int] = 2, include_extension: Optional[bool] = False, extension_fields: Optional[List[str]] = ["valueBoolean","valueCode","valueDate","valueDateTime","valueDecimal","valueId","valueInteger","valuePositiveInt","valueString","valueTime","valueUnsignedInt","valueUri", "valueQuantity"], extension_depth: int = 0, max_extension_depth: Optional[int] = 2) -> Union[StructType, DataType]:
        """
    Captures constraints on each element within the resource, profile, or
    extension.
    If the element is present, it must have a value for at least one of the
    defined elements, an @id referenced from the Narrative, or extensions


        id: None
        extension: May be used to represent additional information that is not part of the basic
    definition of the element. In order to make the use of extensions safe and
    manageable, there is a strict set of governance  applied to the definition and
    use of extensions. Though any implementer is allowed to define an extension,
    there is a set of requirements that SHALL be met as part of the definition of
    the extension.
        path: The path identifies the element and is expressed as a "."-separated list of
    ancestor elements, beginning with the name of the resource or extension.
        representation: Codes that define how this element is represented in instances, when the
    deviation varies from the normal case.
        name: The name of this element definition (to refer to it from other element
    definitions using ElementDefinition.nameReference). This is a unique name
    referring to a specific set of constraints applied to this element. One use of
    this is to provide a name to different slices of the same element.
        label: The text to display beside the element indicating its meaning or to use to
    prompt for the element in a user display or form.
        code: A code that provides the meaning for the element according to a particular
    terminology.
        slicing: Indicates that the element is sliced into a set of alternative definitions
    (i.e. in a structure definition, there are multiple different constraints on a
    single element in the base resource). Slicing can be used in any resource that
    has cardinality ..* on the base resource, or any resource with a choice of
    types. The set of slices is any elements that come after this in the element
    sequence that have the same path, until a shorter path occurs (the shorter
    path terminates the set).
        short: A concise description of what this element means (e.g. for use in
    autogenerated summaries).
        definition: Provides a complete explanation of the meaning of the data element for human
    readability.  For the case of elements derived from existing elements (e.g.
    constraints), the definition SHALL be consistent with the base definition, but
    convey the meaning of the element in the particular context of use of the
    resource.
        comments: Explanatory notes and implementation guidance about the data element,
    including notes about how to use the data properly, exceptions to proper use,
    etc.
        requirements: This element is for traceability of why the element was created and why the
    constraints exist as they do. This may be used to point to source materials or
    specifications that drove the structure of this element.
        alias: Identifies additional names by which this element might also be known.
        min: The minimum number of times this element SHALL appear in the instance.
        max: The maximum number of times this element is permitted to appear in the
    instance.
        base: Information about the base definition of the element, provided to make it
    unncessary for tools to trace the deviation of the element through the derived
    and related profiles. This information is only provided where the element
    definition represents a constraint on another element definition, and must be
    present if there is a base element definition.
        type: The data type or resource that the value of this element is permitted to be.
        nameReference: Identifies the name of a slice defined elsewhere in the profile whose
    constraints should be applied to the current element.
        defaultValueBoolean: None
        defaultValueInteger: None
        defaultValueDecimal: None
        defaultValueBase64Binary: None
        defaultValueInstant: None
        defaultValueString: None
        defaultValueUri: None
        defaultValueDate: None
        defaultValueDateTime: None
        defaultValueTime: None
        defaultValueCode: None
        defaultValueOid: None
        defaultValueUuid: None
        defaultValueId: None
        defaultValueUnsignedInt: None
        defaultValuePositiveInt: None
        defaultValueMarkdown: None
        defaultValueAnnotation: None
        defaultValueAttachment: None
        defaultValueIdentifier: None
        defaultValueCodeableConcept: None
        defaultValueCoding: None
        defaultValueQuantity: None
        defaultValueRange: None
        defaultValuePeriod: None
        defaultValueRatio: None
        defaultValueReference: None
        defaultValueSampledData: None
        defaultValueSignature: None
        defaultValueHumanName: None
        defaultValueAddress: None
        defaultValueContactPoint: None
        defaultValueTiming: None
        defaultValueMeta: None
        meaningWhenMissing: The Implicit meaning that is to be understood when this element is missing
    (e.g. 'when this element is missing, the period is ongoing'.
        fixedBoolean: None
        fixedInteger: None
        fixedDecimal: None
        fixedBase64Binary: None
        fixedInstant: None
        fixedString: None
        fixedUri: None
        fixedDate: None
        fixedDateTime: None
        fixedTime: None
        fixedCode: None
        fixedOid: None
        fixedUuid: None
        fixedId: None
        fixedUnsignedInt: None
        fixedPositiveInt: None
        fixedMarkdown: None
        fixedAnnotation: None
        fixedAttachment: None
        fixedIdentifier: None
        fixedCodeableConcept: None
        fixedCoding: None
        fixedQuantity: None
        fixedRange: None
        fixedPeriod: None
        fixedRatio: None
        fixedReference: None
        fixedSampledData: None
        fixedSignature: None
        fixedHumanName: None
        fixedAddress: None
        fixedContactPoint: None
        fixedTiming: None
        fixedMeta: None
        patternBoolean: None
        patternInteger: None
        patternDecimal: None
        patternBase64Binary: None
        patternInstant: None
        patternString: None
        patternUri: None
        patternDate: None
        patternDateTime: None
        patternTime: None
        patternCode: None
        patternOid: None
        patternUuid: None
        patternId: None
        patternUnsignedInt: None
        patternPositiveInt: None
        patternMarkdown: None
        patternAnnotation: None
        patternAttachment: None
        patternIdentifier: None
        patternCodeableConcept: None
        patternCoding: None
        patternQuantity: None
        patternRange: None
        patternPeriod: None
        patternRatio: None
        patternReference: None
        patternSampledData: None
        patternSignature: None
        patternHumanName: None
        patternAddress: None
        patternContactPoint: None
        patternTiming: None
        patternMeta: None
        exampleBoolean: None
        exampleInteger: None
        exampleDecimal: None
        exampleBase64Binary: None
        exampleInstant: None
        exampleString: None
        exampleUri: None
        exampleDate: None
        exampleDateTime: None
        exampleTime: None
        exampleCode: None
        exampleOid: None
        exampleUuid: None
        exampleId: None
        exampleUnsignedInt: None
        examplePositiveInt: None
        exampleMarkdown: None
        exampleAnnotation: None
        exampleAttachment: None
        exampleIdentifier: None
        exampleCodeableConcept: None
        exampleCoding: None
        exampleQuantity: None
        exampleRange: None
        examplePeriod: None
        exampleRatio: None
        exampleReference: None
        exampleSampledData: None
        exampleSignature: None
        exampleHumanName: None
        exampleAddress: None
        exampleContactPoint: None
        exampleTiming: None
        exampleMeta: None
        minValueBoolean: None
        minValueInteger: None
        minValueDecimal: None
        minValueBase64Binary: None
        minValueInstant: None
        minValueString: None
        minValueUri: None
        minValueDate: None
        minValueDateTime: None
        minValueTime: None
        minValueCode: None
        minValueOid: None
        minValueUuid: None
        minValueId: None
        minValueUnsignedInt: None
        minValuePositiveInt: None
        minValueMarkdown: None
        minValueAnnotation: None
        minValueAttachment: None
        minValueIdentifier: None
        minValueCodeableConcept: None
        minValueCoding: None
        minValueQuantity: None
        minValueRange: None
        minValuePeriod: None
        minValueRatio: None
        minValueReference: None
        minValueSampledData: None
        minValueSignature: None
        minValueHumanName: None
        minValueAddress: None
        minValueContactPoint: None
        minValueTiming: None
        minValueMeta: None
        maxValueBoolean: None
        maxValueInteger: None
        maxValueDecimal: None
        maxValueBase64Binary: None
        maxValueInstant: None
        maxValueString: None
        maxValueUri: None
        maxValueDate: None
        maxValueDateTime: None
        maxValueTime: None
        maxValueCode: None
        maxValueOid: None
        maxValueUuid: None
        maxValueId: None
        maxValueUnsignedInt: None
        maxValuePositiveInt: None
        maxValueMarkdown: None
        maxValueAnnotation: None
        maxValueAttachment: None
        maxValueIdentifier: None
        maxValueCodeableConcept: None
        maxValueCoding: None
        maxValueQuantity: None
        maxValueRange: None
        maxValuePeriod: None
        maxValueRatio: None
        maxValueReference: None
        maxValueSampledData: None
        maxValueSignature: None
        maxValueHumanName: None
        maxValueAddress: None
        maxValueContactPoint: None
        maxValueTiming: None
        maxValueMeta: None
        maxLength: Indicates the maximum length in characters that is permitted to be present in
    conformant instances and which is expected to be supported by conformant
    consumers that support the element.
        condition: A reference to an invariant that may make additional statements about the
    cardinality or value in the instance.
        constraint: Formal constraints such as co-occurrence and other constraints that can be
    computationally evaluated within the context of the instance.
        mustSupport: If true, implementations that produce or consume resources SHALL provide
    "support" for the element in some meaningful way.  If false, the element may
    be ignored and not supported.
        isModifier: If true, the value of this element affects the interpretation of the element
    or resource that contains it, and the value of the element cannot be ignored.
    Typically, this is used for status, negation and qualification codes. The
    effect of this is that the element cannot be ignored by systems: they SHALL
    either recognize the element and process it, and/or a pre-determination has
    been made that it is not relevant to their particular system.
        isSummary: Whether the element should be included if a client requests a search with the
    parameter _summary=true.
        binding: Binds to a value set if this element is coded (code, Coding, CodeableConcept).
        mapping: Identifies a concept from an external specification that roughly corresponds
    to this element.
        """
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.extension import ExtensionSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.propertyrepresentationcode import PropertyRepresentationCodeSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.coding import CodingSchema
        from spark_fhir_schemas.dstu2.complex_types.elementdefinitionslicing import ElementDefinitionSlicingSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.elementdefinitionbase import ElementDefinitionBaseSchema
        from spark_fhir_schemas.dstu2.complex_types.elementdefinitiontype import ElementDefinitionTypeSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.annotation import AnnotationSchema
        from spark_fhir_schemas.dstu2.complex_types.attachment import AttachmentSchema
        from spark_fhir_schemas.dstu2.complex_types.identifier import IdentifierSchema
        from spark_fhir_schemas.dstu2.complex_types.codeableconcept import CodeableConceptSchema
        from spark_fhir_schemas.dstu2.complex_types.coding import CodingSchema
        from spark_fhir_schemas.dstu2.complex_types.quantity import QuantitySchema
        from spark_fhir_schemas.dstu2.complex_types.range import RangeSchema
        from spark_fhir_schemas.dstu2.complex_types.period import PeriodSchema
        from spark_fhir_schemas.dstu2.complex_types.ratio import RatioSchema
        from spark_fhir_schemas.dstu2.complex_types.reference import ReferenceSchema
        from spark_fhir_schemas.dstu2.complex_types.sampleddata import SampledDataSchema
        from spark_fhir_schemas.dstu2.complex_types.signature import SignatureSchema
        from spark_fhir_schemas.dstu2.complex_types.humanname import HumanNameSchema
        from spark_fhir_schemas.dstu2.complex_types.address import AddressSchema
        from spark_fhir_schemas.dstu2.complex_types.contactpoint import ContactPointSchema
        from spark_fhir_schemas.dstu2.complex_types.timing import TimingSchema
        from spark_fhir_schemas.dstu2.complex_types.meta import MetaSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.annotation import AnnotationSchema
        from spark_fhir_schemas.dstu2.complex_types.attachment import AttachmentSchema
        from spark_fhir_schemas.dstu2.complex_types.identifier import IdentifierSchema
        from spark_fhir_schemas.dstu2.complex_types.codeableconcept import CodeableConceptSchema
        from spark_fhir_schemas.dstu2.complex_types.coding import CodingSchema
        from spark_fhir_schemas.dstu2.complex_types.quantity import QuantitySchema
        from spark_fhir_schemas.dstu2.complex_types.range import RangeSchema
        from spark_fhir_schemas.dstu2.complex_types.period import PeriodSchema
        from spark_fhir_schemas.dstu2.complex_types.ratio import RatioSchema
        from spark_fhir_schemas.dstu2.complex_types.reference import ReferenceSchema
        from spark_fhir_schemas.dstu2.complex_types.sampleddata import SampledDataSchema
        from spark_fhir_schemas.dstu2.complex_types.signature import SignatureSchema
        from spark_fhir_schemas.dstu2.complex_types.humanname import HumanNameSchema
        from spark_fhir_schemas.dstu2.complex_types.address import AddressSchema
        from spark_fhir_schemas.dstu2.complex_types.contactpoint import ContactPointSchema
        from spark_fhir_schemas.dstu2.complex_types.timing import TimingSchema
        from spark_fhir_schemas.dstu2.complex_types.meta import MetaSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.annotation import AnnotationSchema
        from spark_fhir_schemas.dstu2.complex_types.attachment import AttachmentSchema
        from spark_fhir_schemas.dstu2.complex_types.identifier import IdentifierSchema
        from spark_fhir_schemas.dstu2.complex_types.codeableconcept import CodeableConceptSchema
        from spark_fhir_schemas.dstu2.complex_types.coding import CodingSchema
        from spark_fhir_schemas.dstu2.complex_types.quantity import QuantitySchema
        from spark_fhir_schemas.dstu2.complex_types.range import RangeSchema
        from spark_fhir_schemas.dstu2.complex_types.period import PeriodSchema
        from spark_fhir_schemas.dstu2.complex_types.ratio import RatioSchema
        from spark_fhir_schemas.dstu2.complex_types.reference import ReferenceSchema
        from spark_fhir_schemas.dstu2.complex_types.sampleddata import SampledDataSchema
        from spark_fhir_schemas.dstu2.complex_types.signature import SignatureSchema
        from spark_fhir_schemas.dstu2.complex_types.humanname import HumanNameSchema
        from spark_fhir_schemas.dstu2.complex_types.address import AddressSchema
        from spark_fhir_schemas.dstu2.complex_types.contactpoint import ContactPointSchema
        from spark_fhir_schemas.dstu2.complex_types.timing import TimingSchema
        from spark_fhir_schemas.dstu2.complex_types.meta import MetaSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.annotation import AnnotationSchema
        from spark_fhir_schemas.dstu2.complex_types.attachment import AttachmentSchema
        from spark_fhir_schemas.dstu2.complex_types.identifier import IdentifierSchema
        from spark_fhir_schemas.dstu2.complex_types.codeableconcept import CodeableConceptSchema
        from spark_fhir_schemas.dstu2.complex_types.coding import CodingSchema
        from spark_fhir_schemas.dstu2.complex_types.quantity import QuantitySchema
        from spark_fhir_schemas.dstu2.complex_types.range import RangeSchema
        from spark_fhir_schemas.dstu2.complex_types.period import PeriodSchema
        from spark_fhir_schemas.dstu2.complex_types.ratio import RatioSchema
        from spark_fhir_schemas.dstu2.complex_types.reference import ReferenceSchema
        from spark_fhir_schemas.dstu2.complex_types.sampleddata import SampledDataSchema
        from spark_fhir_schemas.dstu2.complex_types.signature import SignatureSchema
        from spark_fhir_schemas.dstu2.complex_types.humanname import HumanNameSchema
        from spark_fhir_schemas.dstu2.complex_types.address import AddressSchema
        from spark_fhir_schemas.dstu2.complex_types.contactpoint import ContactPointSchema
        from spark_fhir_schemas.dstu2.complex_types.timing import TimingSchema
        from spark_fhir_schemas.dstu2.complex_types.meta import MetaSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.annotation import AnnotationSchema
        from spark_fhir_schemas.dstu2.complex_types.attachment import AttachmentSchema
        from spark_fhir_schemas.dstu2.complex_types.identifier import IdentifierSchema
        from spark_fhir_schemas.dstu2.complex_types.codeableconcept import CodeableConceptSchema
        from spark_fhir_schemas.dstu2.complex_types.coding import CodingSchema
        from spark_fhir_schemas.dstu2.complex_types.quantity import QuantitySchema
        from spark_fhir_schemas.dstu2.complex_types.range import RangeSchema
        from spark_fhir_schemas.dstu2.complex_types.period import PeriodSchema
        from spark_fhir_schemas.dstu2.complex_types.ratio import RatioSchema
        from spark_fhir_schemas.dstu2.complex_types.reference import ReferenceSchema
        from spark_fhir_schemas.dstu2.complex_types.sampleddata import SampledDataSchema
        from spark_fhir_schemas.dstu2.complex_types.signature import SignatureSchema
        from spark_fhir_schemas.dstu2.complex_types.humanname import HumanNameSchema
        from spark_fhir_schemas.dstu2.complex_types.address import AddressSchema
        from spark_fhir_schemas.dstu2.complex_types.contactpoint import ContactPointSchema
        from spark_fhir_schemas.dstu2.complex_types.timing import TimingSchema
        from spark_fhir_schemas.dstu2.complex_types.meta import MetaSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.annotation import AnnotationSchema
        from spark_fhir_schemas.dstu2.complex_types.attachment import AttachmentSchema
        from spark_fhir_schemas.dstu2.complex_types.identifier import IdentifierSchema
        from spark_fhir_schemas.dstu2.complex_types.codeableconcept import CodeableConceptSchema
        from spark_fhir_schemas.dstu2.complex_types.coding import CodingSchema
        from spark_fhir_schemas.dstu2.complex_types.quantity import QuantitySchema
        from spark_fhir_schemas.dstu2.complex_types.range import RangeSchema
        from spark_fhir_schemas.dstu2.complex_types.period import PeriodSchema
        from spark_fhir_schemas.dstu2.complex_types.ratio import RatioSchema
        from spark_fhir_schemas.dstu2.complex_types.reference import ReferenceSchema
        from spark_fhir_schemas.dstu2.complex_types.sampleddata import SampledDataSchema
        from spark_fhir_schemas.dstu2.complex_types.signature import SignatureSchema
        from spark_fhir_schemas.dstu2.complex_types.humanname import HumanNameSchema
        from spark_fhir_schemas.dstu2.complex_types.address import AddressSchema
        from spark_fhir_schemas.dstu2.complex_types.contactpoint import ContactPointSchema
        from spark_fhir_schemas.dstu2.complex_types.timing import TimingSchema
        from spark_fhir_schemas.dstu2.complex_types.meta import MetaSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.elementdefinitionconstraint import ElementDefinitionConstraintSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.simple_types.element import ElementSchema
        from spark_fhir_schemas.dstu2.complex_types.elementdefinitionbinding import ElementDefinitionBindingSchema
        from spark_fhir_schemas.dstu2.complex_types.elementdefinitionmapping import ElementDefinitionMappingSchema
        if (max_recursion_limit and nesting_list.count("ElementDefinition") >= max_recursion_limit) or (max_nesting_depth and nesting_depth >= max_nesting_depth):
            return StructType([StructField("id", StringType(), True)])
        # add my name to recursion list for later
        my_nesting_list: List[str] = nesting_list+["ElementDefinition"]
        schema = StructType(
            [
                # None
                StructField("id", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # May be used to represent additional information that is not part of the basic
                # definition of the element. In order to make the use of extensions safe and
                # manageable, there is a strict set of governance  applied to the definition and
                # use of extensions. Though any implementer is allowed to define an extension,
                # there is a set of requirements that SHALL be met as part of the definition of
                # the extension.
                StructField("extension", ExtensionSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # The path identifies the element and is expressed as a "."-separated list of
                # ancestor elements, beginning with the name of the resource or extension.
                StructField("path", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # Codes that define how this element is represented in instances, when the
                # deviation varies from the normal case.
                StructField("representation", PropertyRepresentationCodeSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # The name of this element definition (to refer to it from other element
                # definitions using ElementDefinition.nameReference). This is a unique name
                # referring to a specific set of constraints applied to this element. One use of
                # this is to provide a name to different slices of the same element.
                StructField("name", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # The text to display beside the element indicating its meaning or to use to
                # prompt for the element in a user display or form.
                StructField("label", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # A code that provides the meaning for the element according to a particular
                # terminology.
                StructField("code", CodingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # Indicates that the element is sliced into a set of alternative definitions
                # (i.e. in a structure definition, there are multiple different constraints on a
                # single element in the base resource). Slicing can be used in any resource that
                # has cardinality ..* on the base resource, or any resource with a choice of
                # types. The set of slices is any elements that come after this in the element
                # sequence that have the same path, until a shorter path occurs (the shorter
                # path terminates the set).
                StructField("slicing", ElementDefinitionSlicingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # A concise description of what this element means (e.g. for use in
                # autogenerated summaries).
                StructField("short", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # Provides a complete explanation of the meaning of the data element for human
                # readability.  For the case of elements derived from existing elements (e.g.
                # constraints), the definition SHALL be consistent with the base definition, but
                # convey the meaning of the element in the particular context of use of the
                # resource.
                StructField("definition", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # Explanatory notes and implementation guidance about the data element,
                # including notes about how to use the data properly, exceptions to proper use,
                # etc.
                StructField("comments", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # This element is for traceability of why the element was created and why the
                # constraints exist as they do. This may be used to point to source materials or
                # specifications that drove the structure of this element.
                StructField("requirements", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # Identifies additional names by which this element might also be known.
                StructField("alias", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # The minimum number of times this element SHALL appear in the instance.
                StructField("min", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # The maximum number of times this element is permitted to appear in the
                # instance.
                StructField("max", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # Information about the base definition of the element, provided to make it
                # unncessary for tools to trace the deviation of the element through the derived
                # and related profiles. This information is only provided where the element
                # definition represents a constraint on another element definition, and must be
                # present if there is a base element definition.
                StructField("base", ElementDefinitionBaseSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # The data type or resource that the value of this element is permitted to be.
                StructField("type", ElementDefinitionTypeSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # Identifies the name of a slice defined elsewhere in the profile whose
                # constraints should be applied to the current element.
                StructField("nameReference", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueBoolean", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueInteger", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueDecimal", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueBase64Binary", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueInstant", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueString", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueUri", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueDate", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueDateTime", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueTime", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueCode", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueOid", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueUuid", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueId", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueUnsignedInt", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValuePositiveInt", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueMarkdown", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueAnnotation", AnnotationSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueAttachment", AttachmentSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueIdentifier", IdentifierSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueCodeableConcept", CodeableConceptSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueCoding", CodingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueQuantity", QuantitySchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueRange", RangeSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValuePeriod", PeriodSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueRatio", RatioSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueReference", ReferenceSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueSampledData", SampledDataSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueSignature", SignatureSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueHumanName", HumanNameSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueAddress", AddressSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueContactPoint", ContactPointSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueTiming", TimingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("defaultValueMeta", MetaSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # The Implicit meaning that is to be understood when this element is missing
                # (e.g. 'when this element is missing, the period is ongoing'.
                StructField("meaningWhenMissing", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedBoolean", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedInteger", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedDecimal", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedBase64Binary", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedInstant", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedString", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedUri", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedDate", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedDateTime", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedTime", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedCode", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedOid", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedUuid", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedId", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedUnsignedInt", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedPositiveInt", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedMarkdown", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedAnnotation", AnnotationSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedAttachment", AttachmentSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedIdentifier", IdentifierSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedCodeableConcept", CodeableConceptSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedCoding", CodingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedQuantity", QuantitySchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedRange", RangeSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedPeriod", PeriodSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedRatio", RatioSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedReference", ReferenceSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedSampledData", SampledDataSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedSignature", SignatureSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedHumanName", HumanNameSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedAddress", AddressSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedContactPoint", ContactPointSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedTiming", TimingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("fixedMeta", MetaSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternBoolean", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternInteger", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternDecimal", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternBase64Binary", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternInstant", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternString", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternUri", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternDate", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternDateTime", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternTime", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternCode", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternOid", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternUuid", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternId", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternUnsignedInt", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternPositiveInt", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternMarkdown", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternAnnotation", AnnotationSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternAttachment", AttachmentSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternIdentifier", IdentifierSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternCodeableConcept", CodeableConceptSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternCoding", CodingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternQuantity", QuantitySchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternRange", RangeSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternPeriod", PeriodSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternRatio", RatioSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternReference", ReferenceSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternSampledData", SampledDataSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternSignature", SignatureSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternHumanName", HumanNameSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternAddress", AddressSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternContactPoint", ContactPointSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternTiming", TimingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("patternMeta", MetaSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleBoolean", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleInteger", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleDecimal", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleBase64Binary", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleInstant", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleString", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleUri", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleDate", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleDateTime", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleTime", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleCode", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleOid", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleUuid", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleId", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleUnsignedInt", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("examplePositiveInt", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleMarkdown", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleAnnotation", AnnotationSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleAttachment", AttachmentSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleIdentifier", IdentifierSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleCodeableConcept", CodeableConceptSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleCoding", CodingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleQuantity", QuantitySchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleRange", RangeSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("examplePeriod", PeriodSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleRatio", RatioSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleReference", ReferenceSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleSampledData", SampledDataSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleSignature", SignatureSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleHumanName", HumanNameSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleAddress", AddressSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleContactPoint", ContactPointSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleTiming", TimingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("exampleMeta", MetaSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueBoolean", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueInteger", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueDecimal", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueBase64Binary", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueInstant", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueString", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueUri", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueDate", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueDateTime", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueTime", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueCode", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueOid", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueUuid", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueId", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueUnsignedInt", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValuePositiveInt", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueMarkdown", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueAnnotation", AnnotationSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueAttachment", AttachmentSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueIdentifier", IdentifierSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueCodeableConcept", CodeableConceptSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueCoding", CodingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueQuantity", QuantitySchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueRange", RangeSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValuePeriod", PeriodSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueRatio", RatioSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueReference", ReferenceSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueSampledData", SampledDataSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueSignature", SignatureSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueHumanName", HumanNameSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueAddress", AddressSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueContactPoint", ContactPointSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueTiming", TimingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("minValueMeta", MetaSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueBoolean", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueInteger", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueDecimal", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueBase64Binary", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueInstant", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueString", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueUri", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueDate", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueDateTime", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueTime", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueCode", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueOid", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueUuid", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueId", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueUnsignedInt", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValuePositiveInt", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueMarkdown", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueAnnotation", AnnotationSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueAttachment", AttachmentSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueIdentifier", IdentifierSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueCodeableConcept", CodeableConceptSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueCoding", CodingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueQuantity", QuantitySchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueRange", RangeSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValuePeriod", PeriodSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueRatio", RatioSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueReference", ReferenceSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueSampledData", SampledDataSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueSignature", SignatureSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueHumanName", HumanNameSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueAddress", AddressSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueContactPoint", ContactPointSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueTiming", TimingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # None
                StructField("maxValueMeta", MetaSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # Indicates the maximum length in characters that is permitted to be present in
                # conformant instances and which is expected to be supported by conformant
                # consumers that support the element.
                StructField("maxLength", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # A reference to an invariant that may make additional statements about the
                # cardinality or value in the instance.
                StructField("condition", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # Formal constraints such as co-occurrence and other constraints that can be
                # computationally evaluated within the context of the instance.
                StructField("constraint", ElementDefinitionConstraintSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # If true, implementations that produce or consume resources SHALL provide
                # "support" for the element in some meaningful way.  If false, the element may
                # be ignored and not supported.
                StructField("mustSupport", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # If true, the value of this element affects the interpretation of the element
                # or resource that contains it, and the value of the element cannot be ignored.
                # Typically, this is used for status, negation and qualification codes. The
                # effect of this is that the element cannot be ignored by systems: they SHALL
                # either recognize the element and process it, and/or a pre-determination has
                # been made that it is not relevant to their particular system.
                StructField("isModifier", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # Whether the element should be included if a client requests a search with the
                # parameter _summary=true.
                StructField("isSummary", ElementSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # Binds to a value set if this element is coded (code, Coding, CodeableConcept).
                StructField("binding", ElementDefinitionBindingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
                # Identifies a concept from an external specification that roughly corresponds
                # to this element.
                StructField("mapping", ElementDefinitionMappingSchema.get_schema(max_nesting_depth=max_nesting_depth,nesting_depth=nesting_depth+1,nesting_list=my_nesting_list,max_recursion_limit=max_recursion_limit,include_extension=include_extension,extension_fields=extension_fields, extension_depth=extension_depth+1, max_extension_depth=max_extension_depth), True),
            ]
        )
        if not include_extension:
            schema.fields = [c if c.name != "extension" else StructField("extension", StringType(), True) for c in schema.fields]

        return schema
